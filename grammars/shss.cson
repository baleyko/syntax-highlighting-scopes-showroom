name: 'Syntax Highlighting Scopes Showroom'
fileTypes: [
  'shss'
]
scopeName: 'source.shss'
patterns: [
  {
    match: 'keyword.control.php'
    name: 'keyword.control.php'
  }
  {
    match: 'keyword.control.ruby'
    name: 'keyword.control.ruby'
  }
  {
    match: 'keyword.control.python'
    name: 'keyword.control.python'
  }
  {
    match: 'comment.line'
    name: 'comment.line'
  }
  {
    match: 'comment.block'
    name: 'comment.block'
  }
  {
    match: 'comment.block.documentation'
    name: 'comment.block.documentation'
  }
  {
    match: 'punctuation.definition.comment'
    name: 'punctuation.definition.comment'
  }
  {
    match: 'meta.toc-list'
    name: 'meta.toc-list'
  }
  {
    match: 'constant.numeric'
    name: 'constant.numeric'
  }
  {
    match: 'constant.numeric.integer'
    name: 'constant.numeric.integer'
  }
  {
    match: 'constant.numeric.integer.binary'
    name: 'constant.numeric.integer.binary'
  }
  {
    match: 'constant.numeric.integer.octal'
    name: 'constant.numeric.integer.octal'
  }
  {
    match: 'constant.numeric.integer.decimal'
    name: 'constant.numeric.integer.decimal'
  }
  {
    match: 'constant.numeric.integer.hexadecimal'
    name: 'constant.numeric.integer.hexadecimal'
  }
  {
    match: 'constant.numeric.integer.other'
    name: 'constant.numeric.integer.other'
  }
  {
    match: 'constant.numeric.float'
    name: 'constant.numeric.float'
  }
  {
    match: 'constant.numeric.float.binary'
    name: 'constant.numeric.float.binary'
  }
  {
    match: 'constant.numeric.float.octal'
    name: 'constant.numeric.float.octal'
  }
  {
    match: 'constant.numeric.float.decimal'
    name: 'constant.numeric.float.decimal'
  }
  {
    match: 'constant.numeric.float.hexadecimal'
    name: 'constant.numeric.float.hexadecimal'
  }
  {
    match: 'constant.numeric.float.other'
    name: 'constant.numeric.float.other'
  }
  {
    match: 'constant.numeric.complex'
    name: 'constant.numeric.complex'
  }
  {
    match: 'constant.numeric.complex.real'
    name: 'constant.numeric.complex.real'
  }
  {
    match: 'constant.numeric.complex.imaginary'
    name: 'constant.numeric.complex.imaginary'
  }
  {
    match: 'constant.language'
    name: 'constant.language'
  }
  {
    match: 'constant.character.escape'
    name: 'constant.character.escape'
  }
  {
    match: 'constant.other.placeholder'
    name: 'constant.other.placeholder'
  }
  {
    match: 'constant.other'
    name: 'constant.other'
  }
  {
    match: 'entity.name.tag'
    name: 'entity.name.tag'
  }
  {
    match: 'entity.other.attribute-name'
    name: 'entity.other.attribute-name'
  }
  {
    match: 'entity.name.type.class'
    name: 'entity.name.type.class'
  }
  {
    match: 'entity.name.type.struct'
    name: 'entity.name.type.struct'
  }
  {
    match: 'entity.name.class'
    name: 'entity.name.class'
  }
  {
    match: 'entity.name.struct'
    name: 'entity.name.struct'
  }
  {
    match: 'entity.name.enum'
    name: 'entity.name.enum'
  }
  {
    match: 'entity.name.union'
    name: 'entity.name.union'
  }
  {
    match: 'entity.name.trait'
    name: 'entity.name.trait'
  }
  {
    match: 'entity.name.interface'
    name: 'entity.name.interface'
  }
  {
    match: 'entity.name.impl'
    name: 'entity.name.impl'
  }
  {
    match: 'entity.name.type'
    name: 'entity.name.type'
  }
  {
    match: 'entity.name.class.forward-decl'
    name: 'entity.name.class.forward-decl'
  }
  {
    match: 'entity.other.inherited-class'
    name: 'entity.other.inherited-class'
  }
  {
    match: 'entity.name.function'
    name: 'entity.name.function'
  }
  {
    match: 'entity.name.function.constructor'
    name: 'entity.name.function.constructor'
  }
  {
    match: 'entity.name.function.destructor'
    name: 'entity.name.function.destructor'
  }
  {
    match: 'entity.name.namespace'
    name: 'entity.name.namespace'
  }
  {
    match: 'entity.name'
    name: 'entity.name'
  }
  {
    match: 'variable.other.constant'
    name: 'variable.other.constant'
  }
  {
    match: 'entity.name.constant'
    name: 'entity.name.constant'
  }
  {
    match: 'entity.name.label'
    name: 'entity.name.label'
  }
  {
    match: 'entity.name.section'
    name: 'entity.name.section'
  }
  {
    match: 'invalid.illegal'
    name: 'invalid.illegal'
  }
  {
    match: 'invalid.deprecated'
    name: 'invalid.deprecated'
  }
  {
    match: 'keyword.control'
    name: 'keyword.control'
  }
  {
    match: 'keyword.control.conditional'
    name: 'keyword.control.conditional'
  }
  {
    match: 'keyword.control.import'
    name: 'keyword.control.import'
  }
  {
    match: 'punctuation.definition.keyword'
    name: 'punctuation.definition.keyword'
  }
  {
    match: 'keyword.operator'
    name: 'keyword.operator'
  }
  {
    match: 'keyword.operator.assignment'
    name: 'keyword.operator.assignment'
  }
  {
    match: 'keyword.operator.arithmetic'
    name: 'keyword.operator.arithmetic'
  }
  {
    match: 'keyword.operator.bitwise'
    name: 'keyword.operator.bitwise'
  }
  {
    match: 'keyword.operator.logical'
    name: 'keyword.operator.logical'
  }
  {
    match: 'keyword.operator.word'
    name: 'keyword.operator.word'
  }
  {
    match: 'keyword.other.type'
    name: 'keyword.other.type'
  }
  {
    match: 'support.constant.ext'
    name: 'support.constant.ext'
  }
  {
    match: 'keyword.other'
    name: 'keyword.other'
  }
  {
    match: 'markup.heading'
    name: 'markup.heading'
  }
  {
    match: 'markup.list.unnumbered'
    name: 'markup.list.unnumbered'
  }
  {
    match: 'markup.list.numbered'
    name: 'markup.list.numbered'
  }
  {
    match: 'markup.bold'
    name: 'markup.bold'
  }
  {
    match: 'markup.italic'
    name: 'markup.italic'
  }
  {
    match: 'markup.underline'
    name: 'markup.underline'
  }
  {
    match: 'markup.inserted'
    name: 'markup.inserted'
  }
  {
    match: 'markup.deleted'
    name: 'markup.deleted'
  }
  {
    match: 'markup.underline.link'
    name: 'markup.underline.link'
  }
  {
    match: 'markup.quote'
    name: 'markup.quote'
  }
  {
    match: 'markup.raw.inline'
    name: 'markup.raw.inline'
  }
  {
    match: 'markup.raw.block'
    name: 'markup.raw.block'
  }
  {
    match: 'markup.other'
    name: 'markup.other'
  }
  {
    match: 'meta.class'
    name: 'meta.class'
  }
  {
    match: 'meta.struct'
    name: 'meta.struct'
  }
  {
    match: 'meta.enum'
    name: 'meta.enum'
  }
  {
    match: 'meta.union'
    name: 'meta.union'
  }
  {
    match: 'meta.trait'
    name: 'meta.trait'
  }
  {
    match: 'meta.interface'
    name: 'meta.interface'
  }
  {
    match: 'meta.impl'
    name: 'meta.impl'
  }
  {
    match: 'meta.type'
    name: 'meta.type'
  }
  {
    match: 'meta.function'
    name: 'meta.function'
  }
  {
    match: 'meta.function.parameters'
    name: 'meta.function.parameters'
  }
  {
    match: 'meta.function.return-type'
    name: 'meta.function.return-type'
  }
  {
    match: 'meta.namespace'
    name: 'meta.namespace'
  }
  {
    match: 'meta.preprocessor'
    name: 'meta.preprocessor'
  }
  {
    match: 'meta.annotation'
    name: 'meta.annotation'
  }
  {
    match: 'variable.annotation'
    name: 'variable.annotation'
  }
  {
    match: 'meta.annotation'
    name: 'meta.annotation'
  }
  {
    match: 'meta.annotation.identifier'
    name: 'meta.annotation.identifier'
  }
  {
    match: 'meta.annotation.parameters'
    name: 'meta.annotation.parameters'
  }
  {
    match: 'punctuation.definition.annotation'
    name: 'punctuation.definition.annotation'
  }
  {
    match: 'meta.path'
    name: 'meta.path'
  }
  {
    match: 'variable.function'
    name: 'variable.function'
  }
  {
    match: 'support.function'
    name: 'support.function'
  }
  {
    match: 'meta.function-call'
    name: 'meta.function-call'
  }
  {
    match: 'meta.block'
    name: 'meta.block'
  }
  {
    match: 'punctuation.section.block.begin'
    name: 'punctuation.section.block.begin'
  }
  {
    match: 'punctuation.section.block.end'
    name: 'punctuation.section.block.end'
  }
  {
    match: 'meta.braces'
    name: 'meta.braces'
  }
  {
    match: 'punctuation.section.braces.begin'
    name: 'punctuation.section.braces.begin'
  }
  {
    match: 'punctuation.section.braces.end'
    name: 'punctuation.section.braces.end'
  }
  {
    match: 'meta.group'
    name: 'meta.group'
  }
  {
    match: 'punctuation.section.group.begin'
    name: 'punctuation.section.group.begin'
  }
  {
    match: 'punctuation.section.group.end'
    name: 'punctuation.section.group.end'
  }
  {
    match: 'meta.parens'
    name: 'meta.parens'
  }
  {
    match: 'punctuation.section.parens.begin'
    name: 'punctuation.section.parens.begin'
  }
  {
    match: 'punctuation.section.parens.end'
    name: 'punctuation.section.parens.end'
  }
  {
    match: 'meta.brackets'
    name: 'meta.brackets'
  }
  {
    match: 'punctuation.section.brackets.begin'
    name: 'punctuation.section.brackets.begin'
  }
  {
    match: 'punctuation.section.brackets.end'
    name: 'punctuation.section.brackets.end'
  }
  {
    match: 'meta.generic'
    name: 'meta.generic'
  }
  {
    match: 'punctuation.definition.generic.begin'
    name: 'punctuation.definition.generic.begin'
  }
  {
    match: 'punctuation.definition.generic.end'
    name: 'punctuation.definition.generic.end'
  }
  {
    match: 'meta.tag'
    name: 'meta.tag'
  }
  {
    match: 'meta.paragraph'
    name: 'meta.paragraph'
  }
  {
    match: 'punctuation.separator'
    name: 'punctuation.separator'
  }
  {
    match: 'punctuation.terminator'
    name: 'punctuation.terminator'
  }
  {
    match: 'punctuation.separator.continuation'
    name: 'punctuation.separator.continuation'
  }
  {
    match: 'punctuation.accessor'
    name: 'punctuation.accessor'
  }
  {
    match: 'storage.type'
    name: 'storage.type'
  }
  {
    match: 'storage.modifier'
    name: 'storage.modifier'
  }
  {
    match: 'storage.type.function keyword.declaration.function'
    name: 'storage.type.function keyword.declaration.function'
  }
  {
    match: 'storage.type.class keyword.declaration.class'
    name: 'storage.type.class keyword.declaration.class'
  }
  {
    match: 'storage.type.struct keyword.declaration.struct'
    name: 'storage.type.struct keyword.declaration.struct'
  }
  {
    match: 'storage.type.enum keyword.declaration.enum'
    name: 'storage.type.enum keyword.declaration.enum'
  }
  {
    match: 'storage.type.union keyword.declaration.union'
    name: 'storage.type.union keyword.declaration.union'
  }
  {
    match: 'storage.type.trait keyword.declaration.trait'
    name: 'storage.type.trait keyword.declaration.trait'
  }
  {
    match: 'storage.type.interface keyword.declaration.interface'
    name: 'storage.type.interface keyword.declaration.interface'
  }
  {
    match: 'storage.type.impl keyword.declaration.impl'
    name: 'storage.type.impl keyword.declaration.impl'
  }
  {
    match: 'storage.type keyword.declaration.type'
    name: 'storage.type keyword.declaration.type'
  }
  {
    match: 'string.quoted.single'
    name: 'string.quoted.single'
  }
  {
    match: 'string.quoted.double'
    name: 'string.quoted.double'
  }
  {
    match: 'string.quoted.triple'
    name: 'string.quoted.triple'
  }
  {
    match: 'string.quoted.other'
    name: 'string.quoted.other'
  }
  {
    match: 'meta.string'
    name: 'meta.string'
  }
  {
    match: 'punctuation.definition.string.begin'
    name: 'punctuation.definition.string.begin'
  }
  {
    match: 'punctuation.definition.string.end'
    name: 'punctuation.definition.string.end'
  }
  {
    match: 'string.unquoted'
    name: 'string.unquoted'
  }
  {
    match: 'string.regexp'
    name: 'string.regexp'
  }
  {
    match: 'string'
    name: 'string'
  }
  {
    match: 'meta.interpolation'
    name: 'meta.interpolation'
  }
  {
    match: 'punctuation.section.interpolation.begin'
    name: 'punctuation.section.interpolation.begin'
  }
  {
    match: 'punctuation.section.interpolation.end'
    name: 'punctuation.section.interpolation.end'
  }
  {
    match: 'source.<em>language-suffix</em>.embedded'
    name: 'source.<em>language-suffix</em>.embedded'
  }
  {
    match: 'support.constant'
    name: 'support.constant'
  }
  {
    match: 'support.module'
    name: 'support.module'
  }
  {
    match: 'support.type'
    name: 'support.type'
  }
  {
    match: 'support.class'
    name: 'support.class'
  }
  {
    match: 'text.html.basic'
    name: 'text.html.basic'
  }
  {
    match: 'text.html.markdown'
    name: 'text.html.markdown'
  }
  {
    match: 'text.html'
    name: 'text.html'
  }
  {
    match: 'text.xml'
    name: 'text.xml'
  }
  {
    match: 'variable.other'
    name: 'variable.other'
  }
  {
    match: 'variable.other.readwrite'
    name: 'variable.other.readwrite'
  }
  {
    match: 'punctuation.definition.variable'
    name: 'punctuation.definition.variable'
  }
  {
    match: 'variable.language'
    name: 'variable.language'
  }
  {
    match: 'variable.parameter'
    name: 'variable.parameter'
  }
  {
    match: 'variable.other.member'
    name: 'variable.other.member'
  }
  {
    match: 'keyword.declaration'
    name: 'keyword.declaration'
  }
]
