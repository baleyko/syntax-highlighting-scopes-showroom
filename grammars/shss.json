{
  "name": "Syntax Highlighting Scopes Showroom",
  "fileTypes": [
    "shss"
  ],
  "scopeName": "source.shss",
  "patterns": [
    {
      "match": "comment.line",
      "name": "comment.line"
    },
    {
      "match": "comment.block.documentation",
      "name": "comment.block.documentation"
    },
    {
      "match": "comment.block",
      "name": "comment.block"
    },
    {
      "match": "comment",
      "name": "comment"
    },
    {
      "match": "constant.numeric.integer.binary",
      "name": "constant.numeric.integer.binary"
    },
    {
      "match": "constant.numeric.integer.octal",
      "name": "constant.numeric.integer.octal"
    },
    {
      "match": "constant.numeric.integer.decimal",
      "name": "constant.numeric.integer.decimal"
    },
    {
      "match": "constant.numeric.integer.hexadecimal",
      "name": "constant.numeric.integer.hexadecimal"
    },
    {
      "match": "constant.numeric.integer.other",
      "name": "constant.numeric.integer.other"
    },
    {
      "match": "constant.numeric.integer",
      "name": "constant.numeric.integer"
    },
    {
      "match": "constant.numeric.float.binary",
      "name": "constant.numeric.float.binary"
    },
    {
      "match": "constant.numeric.float.octal",
      "name": "constant.numeric.float.octal"
    },
    {
      "match": "constant.numeric.float.decimal",
      "name": "constant.numeric.float.decimal"
    },
    {
      "match": "constant.numeric.float.hexadecimal",
      "name": "constant.numeric.float.hexadecimal"
    },
    {
      "match": "constant.numeric.float.other",
      "name": "constant.numeric.float.other"
    },
    {
      "match": "constant.numeric.float",
      "name": "constant.numeric.float"
    },
    {
      "match": "constant.numeric.complex.real",
      "name": "constant.numeric.complex.real"
    },
    {
      "match": "constant.numeric.complex.imaginary",
      "name": "constant.numeric.complex.imaginary"
    },
    {
      "match": "constant.numeric.complex",
      "name": "constant.numeric.complex"
    },
    {
      "match": "constant.numeric",
      "name": "constant.numeric"
    },
    {
      "match": "constant.language",
      "name": "constant.language"
    },
    {
      "match": "constant.character.escape",
      "name": "constant.character.escape"
    },
    {
      "match": "constant.other.placeholder",
      "name": "constant.other.placeholder"
    },
    {
      "match": "constant.other",
      "name": "constant.other"
    },
    {
      "match": "constant",
      "name": "constant"
    },
    {
      "match": "entity.other.attribute-name",
      "name": "entity.other.attribute-name"
    },
    {
      "match": "entity.other.inherited-class",
      "name": "entity.other.inherited-class"
    },
    {
      "match": "entity.other",
      "name": "entity.other"
    },
    {
      "match": "entity.name.type.class",
      "name": "entity.name.type.class"
    },
    {
      "match": "entity.name.type.struct",
      "name": "entity.name.type.struct"
    },
    {
      "match": "entity.name.type",
      "name": "entity.name.type"
    },
    {
      "match": "entity.name.class.forward-decl",
      "name": "entity.name.class.forward-decl"
    },
    {
      "match": "entity.name.class",
      "name": "entity.name.class"
    },
    {
      "match": "entity.name.struct",
      "name": "entity.name.struct"
    },
    {
      "match": "entity.name.enum",
      "name": "entity.name.enum"
    },
    {
      "match": "entity.name.union",
      "name": "entity.name.union"
    },
    {
      "match": "entity.name.trait",
      "name": "entity.name.trait"
    },
    {
      "match": "entity.name.interface",
      "name": "entity.name.interface"
    },
    {
      "match": "entity.name.impl",
      "name": "entity.name.impl"
    },
    {
      "match": "entity.name.type",
      "name": "entity.name.type"
    },
    {
      "match": "entity.name.function.constructor",
      "name": "entity.name.function.constructor"
    },
    {
      "match": "entity.name.function.destructor",
      "name": "entity.name.function.destructor"
    },
    {
      "match": "entity.name.function",
      "name": "entity.name.function"
    },
    {
      "match": "entity.name.namespace",
      "name": "entity.name.namespace"
    },
    {
      "match": "entity.name.constant",
      "name": "entity.name.constant"
    },
    {
      "match": "entity.name.label",
      "name": "entity.name.label"
    },
    {
      "match": "entity.name.section",
      "name": "entity.name.section"
    },
    {
      "match": "entity.name.tag",
      "name": "entity.name.tag"
    },
    {
      "match": "entity.name",
      "name": "entity.name"
    },
    {
      "match": "entity",
      "name": "entity"
    },
    {
      "match": "invalid.illegal.stray-bracket-end",
      "name": "invalid.illegal.stray-bracket-end"
    },
    {
      "match": "invalid.illegal.stray-semi-colon",
      "name": "invalid.illegal.stray-semi-colon"
    },
    {
      "match": "invalid.illegal",
      "name": "invalid.illegal"
    },
    {
      "match": "invalid.deprecated",
      "name": "invalid.deprecated"
    },
    {
      "match": "invalid",
      "name": "invalid"
    },
    {
      "match": "markup.heading",
      "name": "markup.heading"
    },
    {
      "match": "markup.list.unnumbered",
      "name": "markup.list.unnumbered"
    },
    {
      "match": "markup.list.numbered",
      "name": "markup.list.numbered"
    },
    {
      "match": "markup.list",
      "name": "markup.list"
    },
    {
      "match": "markup.bold",
      "name": "markup.bold"
    },
    {
      "match": "markup.italic",
      "name": "markup.italic"
    },
    {
      "match": "markup.inserted",
      "name": "markup.inserted"
    },
    {
      "match": "markup.deleted",
      "name": "markup.deleted"
    },
    {
      "match": "markup.underline.link",
      "name": "markup.underline.link"
    },
    {
      "match": "markup.underline",
      "name": "markup.underline"
    },
    {
      "match": "markup.quote",
      "name": "markup.quote"
    },
    {
      "match": "markup.raw.inline",
      "name": "markup.raw.inline"
    },
    {
      "match": "markup.raw.block",
      "name": "markup.raw.block"
    },
    {
      "match": "markup.raw",
      "name": "markup.raw"
    },
    {
      "match": "markup.other",
      "name": "markup.other"
    },
    {
      "match": "markup",
      "name": "markup"
    },
    {
      "match": "meta.toc-list",
      "name": "meta.toc-list"
    },
    {
      "match": "meta.class",
      "name": "meta.class"
    },
    {
      "match": "meta.struct",
      "name": "meta.struct"
    },
    {
      "match": "meta.enum",
      "name": "meta.enum"
    },
    {
      "match": "meta.union",
      "name": "meta.union"
    },
    {
      "match": "meta.trait",
      "name": "meta.trait"
    },
    {
      "match": "meta.interface",
      "name": "meta.interface"
    },
    {
      "match": "meta.impl",
      "name": "meta.impl"
    },
    {
      "match": "meta.type",
      "name": "meta.type"
    },
    {
      "match": "meta.string",
      "name": "meta.string"
    },
    {
      "match": "meta.path",
      "name": "meta.path"
    },
    {
      "match": "meta.function-call",
      "name": "meta.function-call"
    },
    {
      "match": "meta.block",
      "name": "meta.block"
    },
    {
      "match": "meta.braces",
      "name": "meta.braces"
    },
    {
      "match": "meta.group",
      "name": "meta.group"
    },
    {
      "match": "meta.parens",
      "name": "meta.parens"
    },
    {
      "match": "meta.brackets",
      "name": "meta.brackets"
    },
    {
      "match": "meta.generic",
      "name": "meta.generic"
    },
    {
      "match": "meta.tag",
      "name": "meta.tag"
    },
    {
      "match": "meta.paragraph",
      "name": "meta.paragraph"
    },
    {
      "match": "meta.function.parameters",
      "name": "meta.function.parameters"
    },
    {
      "match": "meta.function.parameters",
      "name": "meta.function.parameters"
    },
    {
      "match": "meta.function.return-type",
      "name": "meta.function.return-type"
    },
    {
      "match": "meta.function",
      "name": "meta.function"
    },
    {
      "match": "meta.namespace",
      "name": "meta.namespace"
    },
    {
      "match": "meta.preprocessor.include",
      "name": "meta.preprocessor.include"
    },
    {
      "match": "meta.preprocessor",
      "name": "meta.preprocessor"
    },
    {
      "match": "meta.interpolation",
      "name": "meta.interpolation"
    },
    {
      "match": "meta.annotation.identifier",
      "name": "meta.annotation.identifier"
    },
    {
      "match": "meta.annotation.parameters",
      "name": "meta.annotation.parameters"
    },
    {
      "match": "meta.annotation",
      "name": "meta.annotation"
    },
    {
      "match": "meta",
      "name": "meta"
    },
    {
      "match": "punctuation.terminator",
      "name": "punctuation.terminator"
    },
    {
      "match": "punctuation.separator.continuation",
      "name": "punctuation.separator.continuation"
    },
    {
      "match": "punctuation.separator",
      "name": "punctuation.separator"
    },
    {
      "match": "punctuation.accessor",
      "name": "punctuation.accessor"
    },
    {
      "match": "punctuation.section.block.begin",
      "name": "punctuation.section.block.begin"
    },
    {
      "match": "punctuation.section.block.end",
      "name": "punctuation.section.block.end"
    },
    {
      "match": "punctuation.section.block",
      "name": "punctuation.section.block"
    },
    {
      "match": "punctuation.section.braces.begin",
      "name": "punctuation.section.braces.begin"
    },
    {
      "match": "punctuation.section.braces.end",
      "name": "punctuation.section.braces.end"
    },
    {
      "match": "punctuation.section.braces",
      "name": "punctuation.section.braces"
    },
    {
      "match": "punctuation.section.group.begin",
      "name": "punctuation.section.group.begin"
    },
    {
      "match": "punctuation.section.group.end",
      "name": "punctuation.section.group.end"
    },
    {
      "match": "punctuation.section.group",
      "name": "punctuation.section.group"
    },
    {
      "match": "punctuation.section.parens.begin",
      "name": "punctuation.section.parens.begin"
    },
    {
      "match": "punctuation.section.parens.end",
      "name": "punctuation.section.parens.end"
    },
    {
      "match": "punctuation.section.parens",
      "name": "punctuation.section.parens"
    },
    {
      "match": "punctuation.section.brackets.begin",
      "name": "punctuation.section.brackets.begin"
    },
    {
      "match": "punctuation.section.brackets.end",
      "name": "punctuation.section.brackets.end"
    },
    {
      "match": "punctuation.section.brackets",
      "name": "punctuation.section.brackets"
    },
    {
      "match": "punctuation.section.interpolation.end",
      "name": "punctuation.section.interpolation.end"
    },
    {
      "match": "punctuation.section.interpolation.begin",
      "name": "punctuation.section.interpolation.begin"
    },
    {
      "match": "punctuation.section.interpolation",
      "name": "punctuation.section.interpolation"
    },
    {
      "match": "punctuation.section",
      "name": "punctuation.section"
    },
    {
      "match": "punctuation.definition.tag.begin",
      "name": "punctuation.definition.tag.begin"
    },
    {
      "match": "punctuation.definition.tag.end",
      "name": "punctuation.definition.tag.end"
    },
    {
      "match": "punctuation.definition.tag",
      "name": "punctuation.definition.tag"
    },
    {
      "match": "punctuation.definition.string.begin",
      "name": "punctuation.definition.string.begin"
    },
    {
      "match": "punctuation.definition.string.end",
      "name": "punctuation.definition.string.end"
    },
    {
      "match": "punctuation.definition.string",
      "name": "punctuation.definition.string"
    },
    {
      "match": "punctuation.definition.comment.begin",
      "name": "punctuation.definition.comment.begin"
    },
    {
      "match": "punctuation.definition.comment.end",
      "name": "punctuation.definition.comment.end"
    },
    {
      "match": "punctuation.definition.comment",
      "name": "punctuation.definition.comment"
    },
    {
      "match": "punctuation.definition.keyword.begin",
      "name": "punctuation.definition.keyword.begin"
    },
    {
      "match": "punctuation.definition.keyword.end",
      "name": "punctuation.definition.keyword.end"
    },
    {
      "match": "punctuation.definition.keyword",
      "name": "punctuation.definition.keyword"
    },
    {
      "match": "punctuation.definition.annotation.begin",
      "name": "punctuation.definition.annotation.begin"
    },
    {
      "match": "punctuation.definition.annotation.end",
      "name": "punctuation.definition.annotation.end"
    },
    {
      "match": "punctuation.definition.annotation",
      "name": "punctuation.definition.annotation"
    },
    {
      "match": "punctuation.definition.generic.begin",
      "name": "punctuation.definition.generic.begin"
    },
    {
      "match": "punctuation.definition.generic.end",
      "name": "punctuation.definition.generic.end"
    },
    {
      "match": "punctuation.definition.generic",
      "name": "punctuation.definition.generic"
    },
    {
      "match": "punctuation.definition.variable",
      "name": "punctuation.definition.variable"
    },
    {
      "match": "punctuation.definition",
      "name": "punctuation.definition"
    },
    {
      "match": "punctuation",
      "name": "punctuation"
    },
    {
      "match": "storage.modifier.static",
      "name": "storage.modifier.static"
    },
    {
      "match": "storage.modifier.final",
      "name": "storage.modifier.final"
    },
    {
      "match": "storage.modifier.abstract",
      "name": "storage.modifier.abstract"
    },
    {
      "match": "storage.modifier.public",
      "name": "storage.modifier.public"
    },
    {
      "match": "storage.modifier.private",
      "name": "storage.modifier.private"
    },
    {
      "match": "storage.modifier.protected",
      "name": "storage.modifier.protected"
    },
    {
      "match": "storage.modifier",
      "name": "storage.modifier"
    },
    {
      "match": "storage.type.function",
      "name": "storage.type.function"
    },
    {
      "match": "storage.type.class",
      "name": "storage.type.class"
    },
    {
      "match": "storage.type.interface",
      "name": "storage.type.interface"
    },
    {
      "match": "storage.type.int",
      "name": "storage.type.int"
    },
    {
      "match": "storage.type.var",
      "name": "storage.type.var"
    },
    {
      "match": "storage.type.struct",
      "name": "storage.type.struct"
    },
    {
      "match": "storage.type.enum",
      "name": "storage.type.enum"
    },
    {
      "match": "storage.type.union",
      "name": "storage.type.union"
    },
    {
      "match": "storage.type.trait",
      "name": "storage.type.trait"
    },
    {
      "match": "storage.type.impl",
      "name": "storage.type.impl"
    },
    {
      "match": "storage.type",
      "name": "storage.type"
    },
    {
      "match": "storage",
      "name": "storage"
    },
    {
      "match": "keyword.declaration.function",
      "name": "keyword.declaration.function"
    },
    {
      "match": "keyword.declaration.class",
      "name": "keyword.declaration.class"
    },
    {
      "match": "keyword.declaration.struct",
      "name": "keyword.declaration.struct"
    },
    {
      "match": "keyword.declaration.enum",
      "name": "keyword.declaration.enum"
    },
    {
      "match": "keyword.declaration.union",
      "name": "keyword.declaration.union"
    },
    {
      "match": "keyword.declaration.trait",
      "name": "keyword.declaration.trait"
    },
    {
      "match": "keyword.declaration.interface",
      "name": "keyword.declaration.interface"
    },
    {
      "match": "keyword.declaration.impl",
      "name": "keyword.declaration.impl"
    },
    {
      "match": "keyword.declaration.type",
      "name": "keyword.declaration.type"
    },
    {
      "match": "keyword.declaration",
      "name": "keyword.declaration"
    },
    {
      "match": "keyword.operator.assignment",
      "name": "keyword.operator.assignment"
    },
    {
      "match": "keyword.operator.arithmetic",
      "name": "keyword.operator.arithmetic"
    },
    {
      "match": "keyword.operator.bitwise",
      "name": "keyword.operator.bitwise"
    },
    {
      "match": "keyword.operator.logical",
      "name": "keyword.operator.logical"
    },
    {
      "match": "keyword.operator.word",
      "name": "keyword.operator.word"
    },
    {
      "match": "keyword.operator",
      "name": "keyword.operator"
    },
    {
      "match": "keyword.control.conditional",
      "name": "keyword.control.conditional"
    },
    {
      "match": "keyword.control.import",
      "name": "keyword.control.import"
    },
    {
      "match": "keyword.control",
      "name": "keyword.control"
    },
    {
      "match": "keyword.other.type",
      "name": "keyword.other.type"
    },
    {
      "match": "keyword.other",
      "name": "keyword.other"
    },
    {
      "match": "keyword",
      "name": "keyword"
    },
    {
      "match": "string.quoted.single",
      "name": "string.quoted.single"
    },
    {
      "match": "string.quoted.double",
      "name": "string.quoted.double"
    },
    {
      "match": "string.quoted.triple",
      "name": "string.quoted.triple"
    },
    {
      "match": "string.quoted.other",
      "name": "string.quoted.other"
    },
    {
      "match": "string.unquoted.heredoc",
      "name": "string.unquoted.heredoc"
    },
    {
      "match": "string.unquoted",
      "name": "string.unquoted"
    },
    {
      "match": "string.regexp",
      "name": "string.regexp"
    },
    {
      "match": "string.interpolated",
      "name": "string.interpolated"
    },
    {
      "match": "string.other",
      "name": "string.other"
    },
    {
      "match": "string",
      "name": "string"
    },
    {
      "match": "support.constant.ext",
      "name": "support.constant.ext"
    },
    {
      "match": "support.constant",
      "name": "support.constant"
    },
    {
      "match": "support.function",
      "name": "support.function"
    },
    {
      "match": "support.module",
      "name": "support.module"
    },
    {
      "match": "support.type",
      "name": "support.type"
    },
    {
      "match": "support.class",
      "name": "support.class"
    },
    {
      "match": "support.variable",
      "name": "support.variable"
    },
    {
      "match": "support.struct",
      "name": "support.struct"
    },
    {
      "match": "support.other",
      "name": "support.other"
    },
    {
      "match": "text.html.basic",
      "name": "text.html.basic"
    },
    {
      "match": "text.html.markdown",
      "name": "text.html.markdown"
    },
    {
      "match": "text.html",
      "name": "text.html"
    },
    {
      "match": "text.xml",
      "name": "text.xml"
    },
    {
      "match": "text.plain",
      "name": "text.plain"
    },
    {
      "match": "text",
      "name": "text"
    },
    {
      "match": "variable.annotation",
      "name": "variable.annotation"
    },
    {
      "match": "variable.function",
      "name": "variable.function"
    },
    {
      "match": "variable.other.member",
      "name": "variable.other.member"
    },
    {
      "match": "variable.other.readwrite",
      "name": "variable.other.readwrite"
    },
    {
      "match": "variable.other.constant",
      "name": "variable.other.constant"
    },
    {
      "match": "variable.other",
      "name": "variable.other"
    },
    {
      "match": "variable.language",
      "name": "variable.language"
    },
    {
      "match": "variable.parameter",
      "name": "variable.parameter"
    },
    {
      "match": "variable",
      "name": "variable"
    },
    {
      "match": "source.language-suffix.embedded",
      "name": "source.language-suffix.embedded"
    },
    {
      "match": "source.language-suffix",
      "name": "source.language-suffix"
    },
    {
      "match": "source",
      "name": "source"
    }
  ]
}
