%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: 'Syntax Highlighting Scopes Showroom'
file_extensions:
- shss
scope: source.shss
contexts:
  main:
  - match: 'comment.line'
    scope: 'comment.line'
  - match: 'comment.block.documentation'
    scope: 'comment.block.documentation'
  - match: 'comment.block'
    scope: 'comment.block'
  - match: 'comment'
    scope: 'comment'
  - match: 'constant.numeric.integer.binary'
    scope: 'constant.numeric.integer.binary'
  - match: 'constant.numeric.integer.octal'
    scope: 'constant.numeric.integer.octal'
  - match: 'constant.numeric.integer.decimal'
    scope: 'constant.numeric.integer.decimal'
  - match: 'constant.numeric.integer.hexadecimal'
    scope: 'constant.numeric.integer.hexadecimal'
  - match: 'constant.numeric.integer.other'
    scope: 'constant.numeric.integer.other'
  - match: 'constant.numeric.integer'
    scope: 'constant.numeric.integer'
  - match: 'constant.numeric.float.binary'
    scope: 'constant.numeric.float.binary'
  - match: 'constant.numeric.float.octal'
    scope: 'constant.numeric.float.octal'
  - match: 'constant.numeric.float.decimal'
    scope: 'constant.numeric.float.decimal'
  - match: 'constant.numeric.float.hexadecimal'
    scope: 'constant.numeric.float.hexadecimal'
  - match: 'constant.numeric.float.other'
    scope: 'constant.numeric.float.other'
  - match: 'constant.numeric.float'
    scope: 'constant.numeric.float'
  - match: 'constant.numeric.complex.real'
    scope: 'constant.numeric.complex.real'
  - match: 'constant.numeric.complex.imaginary'
    scope: 'constant.numeric.complex.imaginary'
  - match: 'constant.numeric.complex'
    scope: 'constant.numeric.complex'
  - match: 'constant.numeric'
    scope: 'constant.numeric'
  - match: 'constant.language'
    scope: 'constant.language'
  - match: 'constant.character.escape'
    scope: 'constant.character.escape'
  - match: 'constant.other.placeholder'
    scope: 'constant.other.placeholder'
  - match: 'constant.other'
    scope: 'constant.other'
  - match: 'constant'
    scope: 'constant'
  - match: 'entity.other.attribute-name'
    scope: 'entity.other.attribute-name'
  - match: 'entity.other.inherited-class'
    scope: 'entity.other.inherited-class'
  - match: 'entity.other'
    scope: 'entity.other'
  - match: 'entity.name.type.class'
    scope: 'entity.name.type.class'
  - match: 'entity.name.type.struct'
    scope: 'entity.name.type.struct'
  - match: 'entity.name.type'
    scope: 'entity.name.type'
  - match: 'entity.name.class.forward-decl'
    scope: 'entity.name.class.forward-decl'
  - match: 'entity.name.class'
    scope: 'entity.name.class'
  - match: 'entity.name.struct'
    scope: 'entity.name.struct'
  - match: 'entity.name.enum'
    scope: 'entity.name.enum'
  - match: 'entity.name.union'
    scope: 'entity.name.union'
  - match: 'entity.name.trait'
    scope: 'entity.name.trait'
  - match: 'entity.name.interface'
    scope: 'entity.name.interface'
  - match: 'entity.name.impl'
    scope: 'entity.name.impl'
  - match: 'entity.name.type'
    scope: 'entity.name.type'
  - match: 'entity.name.function.constructor'
    scope: 'entity.name.function.constructor'
  - match: 'entity.name.function.destructor'
    scope: 'entity.name.function.destructor'
  - match: 'entity.name.function'
    scope: 'entity.name.function'
  - match: 'entity.name.namespace'
    scope: 'entity.name.namespace'
  - match: 'entity.name.constant'
    scope: 'entity.name.constant'
  - match: 'entity.name.label'
    scope: 'entity.name.label'
  - match: 'entity.name.section'
    scope: 'entity.name.section'
  - match: 'entity.name.tag'
    scope: 'entity.name.tag'
  - match: 'entity.name'
    scope: 'entity.name'
  - match: 'entity'
    scope: 'entity'
  - match: 'invalid.illegal.stray-bracket-end'
    scope: 'invalid.illegal.stray-bracket-end'
  - match: 'invalid.illegal.stray-semi-colon'
    scope: 'invalid.illegal.stray-semi-colon'
  - match: 'invalid.illegal'
    scope: 'invalid.illegal'
  - match: 'invalid.deprecated'
    scope: 'invalid.deprecated'
  - match: 'invalid'
    scope: 'invalid'
  - match: 'markup.heading'
    scope: 'markup.heading'
  - match: 'markup.list.unnumbered'
    scope: 'markup.list.unnumbered'
  - match: 'markup.list.numbered'
    scope: 'markup.list.numbered'
  - match: 'markup.list'
    scope: 'markup.list'
  - match: 'markup.bold'
    scope: 'markup.bold'
  - match: 'markup.italic'
    scope: 'markup.italic'
  - match: 'markup.inserted'
    scope: 'markup.inserted'
  - match: 'markup.deleted'
    scope: 'markup.deleted'
  - match: 'markup.underline.link'
    scope: 'markup.underline.link'
  - match: 'markup.underline'
    scope: 'markup.underline'
  - match: 'markup.quote'
    scope: 'markup.quote'
  - match: 'markup.raw.inline'
    scope: 'markup.raw.inline'
  - match: 'markup.raw.block'
    scope: 'markup.raw.block'
  - match: 'markup.raw'
    scope: 'markup.raw'
  - match: 'markup.other'
    scope: 'markup.other'
  - match: 'markup'
    scope: 'markup'
  - match: 'meta.toc-list'
    scope: 'meta.toc-list'
  - match: 'meta.class'
    scope: 'meta.class'
  - match: 'meta.struct'
    scope: 'meta.struct'
  - match: 'meta.enum'
    scope: 'meta.enum'
  - match: 'meta.union'
    scope: 'meta.union'
  - match: 'meta.trait'
    scope: 'meta.trait'
  - match: 'meta.interface'
    scope: 'meta.interface'
  - match: 'meta.impl'
    scope: 'meta.impl'
  - match: 'meta.type'
    scope: 'meta.type'
  - match: 'meta.string'
    scope: 'meta.string'
  - match: 'meta.path'
    scope: 'meta.path'
  - match: 'meta.function-call'
    scope: 'meta.function-call'
  - match: 'meta.block'
    scope: 'meta.block'
  - match: 'meta.braces'
    scope: 'meta.braces'
  - match: 'meta.group'
    scope: 'meta.group'
  - match: 'meta.parens'
    scope: 'meta.parens'
  - match: 'meta.brackets'
    scope: 'meta.brackets'
  - match: 'meta.generic'
    scope: 'meta.generic'
  - match: 'meta.tag'
    scope: 'meta.tag'
  - match: 'meta.paragraph'
    scope: 'meta.paragraph'
  - match: 'meta.function.parameters'
    scope: 'meta.function.parameters'
  - match: 'meta.function.parameters'
    scope: 'meta.function.parameters'
  - match: 'meta.function.return-type'
    scope: 'meta.function.return-type'
  - match: 'meta.function'
    scope: 'meta.function'
  - match: 'meta.namespace'
    scope: 'meta.namespace'
  - match: 'meta.preprocessor.include'
    scope: 'meta.preprocessor.include'
  - match: 'meta.preprocessor'
    scope: 'meta.preprocessor'
  - match: 'meta.interpolation'
    scope: 'meta.interpolation'
  - match: 'meta.annotation.identifier'
    scope: 'meta.annotation.identifier'
  - match: 'meta.annotation.parameters'
    scope: 'meta.annotation.parameters'
  - match: 'meta.annotation'
    scope: 'meta.annotation'
  - match: 'meta'
    scope: 'meta'
  - match: 'punctuation.terminator'
    scope: 'punctuation.terminator'
  - match: 'punctuation.separator.continuation'
    scope: 'punctuation.separator.continuation'
  - match: 'punctuation.separator'
    scope: 'punctuation.separator'
  - match: 'punctuation.accessor'
    scope: 'punctuation.accessor'
  - match: 'punctuation.section.block.begin'
    scope: 'punctuation.section.block.begin'
  - match: 'punctuation.section.block.end'
    scope: 'punctuation.section.block.end'
  - match: 'punctuation.section.block'
    scope: 'punctuation.section.block'
  - match: 'punctuation.section.braces.begin'
    scope: 'punctuation.section.braces.begin'
  - match: 'punctuation.section.braces.end'
    scope: 'punctuation.section.braces.end'
  - match: 'punctuation.section.braces'
    scope: 'punctuation.section.braces'
  - match: 'punctuation.section.group.begin'
    scope: 'punctuation.section.group.begin'
  - match: 'punctuation.section.group.end'
    scope: 'punctuation.section.group.end'
  - match: 'punctuation.section.group'
    scope: 'punctuation.section.group'
  - match: 'punctuation.section.parens.begin'
    scope: 'punctuation.section.parens.begin'
  - match: 'punctuation.section.parens.end'
    scope: 'punctuation.section.parens.end'
  - match: 'punctuation.section.parens'
    scope: 'punctuation.section.parens'
  - match: 'punctuation.section.brackets.begin'
    scope: 'punctuation.section.brackets.begin'
  - match: 'punctuation.section.brackets.end'
    scope: 'punctuation.section.brackets.end'
  - match: 'punctuation.section.brackets'
    scope: 'punctuation.section.brackets'
  - match: 'punctuation.section.interpolation.end'
    scope: 'punctuation.section.interpolation.end'
  - match: 'punctuation.section.interpolation.begin'
    scope: 'punctuation.section.interpolation.begin'
  - match: 'punctuation.section.interpolation'
    scope: 'punctuation.section.interpolation'
  - match: 'punctuation.section'
    scope: 'punctuation.section'
  - match: 'punctuation.definition.tag.begin'
    scope: 'punctuation.definition.tag.begin'
  - match: 'punctuation.definition.tag.end'
    scope: 'punctuation.definition.tag.end'
  - match: 'punctuation.definition.tag'
    scope: 'punctuation.definition.tag'
  - match: 'punctuation.definition.string.begin'
    scope: 'punctuation.definition.string.begin'
  - match: 'punctuation.definition.string.end'
    scope: 'punctuation.definition.string.end'
  - match: 'punctuation.definition.string'
    scope: 'punctuation.definition.string'
  - match: 'punctuation.definition.comment.begin'
    scope: 'punctuation.definition.comment.begin'
  - match: 'punctuation.definition.comment.end'
    scope: 'punctuation.definition.comment.end'
  - match: 'punctuation.definition.comment'
    scope: 'punctuation.definition.comment'
  - match: 'punctuation.definition.keyword.begin'
    scope: 'punctuation.definition.keyword.begin'
  - match: 'punctuation.definition.keyword.end'
    scope: 'punctuation.definition.keyword.end'
  - match: 'punctuation.definition.keyword'
    scope: 'punctuation.definition.keyword'
  - match: 'punctuation.definition.annotation.begin'
    scope: 'punctuation.definition.annotation.begin'
  - match: 'punctuation.definition.annotation.end'
    scope: 'punctuation.definition.annotation.end'
  - match: 'punctuation.definition.annotation'
    scope: 'punctuation.definition.annotation'
  - match: 'punctuation.definition.generic.begin'
    scope: 'punctuation.definition.generic.begin'
  - match: 'punctuation.definition.generic.end'
    scope: 'punctuation.definition.generic.end'
  - match: 'punctuation.definition.generic'
    scope: 'punctuation.definition.generic'
  - match: 'punctuation.definition.variable'
    scope: 'punctuation.definition.variable'
  - match: 'punctuation.definition'
    scope: 'punctuation.definition'
  - match: 'punctuation'
    scope: 'punctuation'
  - match: 'storage.modifier.static'
    scope: 'storage.modifier.static'
  - match: 'storage.modifier.final'
    scope: 'storage.modifier.final'
  - match: 'storage.modifier.abstract'
    scope: 'storage.modifier.abstract'
  - match: 'storage.modifier.public'
    scope: 'storage.modifier.public'
  - match: 'storage.modifier.private'
    scope: 'storage.modifier.private'
  - match: 'storage.modifier.protected'
    scope: 'storage.modifier.protected'
  - match: 'storage.modifier'
    scope: 'storage.modifier'
  - match: 'storage.type.function'
    scope: 'storage.type.function'
  - match: 'storage.type.class'
    scope: 'storage.type.class'
  - match: 'storage.type.interface'
    scope: 'storage.type.interface'
  - match: 'storage.type.int'
    scope: 'storage.type.int'
  - match: 'storage.type.var'
    scope: 'storage.type.var'
  - match: 'storage.type.struct'
    scope: 'storage.type.struct'
  - match: 'storage.type.enum'
    scope: 'storage.type.enum'
  - match: 'storage.type.union'
    scope: 'storage.type.union'
  - match: 'storage.type.trait'
    scope: 'storage.type.trait'
  - match: 'storage.type.impl'
    scope: 'storage.type.impl'
  - match: 'storage.type'
    scope: 'storage.type'
  - match: 'storage'
    scope: 'storage'
  - match: 'keyword.declaration.function'
    scope: 'keyword.declaration.function'
  - match: 'keyword.declaration.class'
    scope: 'keyword.declaration.class'
  - match: 'keyword.declaration.struct'
    scope: 'keyword.declaration.struct'
  - match: 'keyword.declaration.enum'
    scope: 'keyword.declaration.enum'
  - match: 'keyword.declaration.union'
    scope: 'keyword.declaration.union'
  - match: 'keyword.declaration.trait'
    scope: 'keyword.declaration.trait'
  - match: 'keyword.declaration.interface'
    scope: 'keyword.declaration.interface'
  - match: 'keyword.declaration.impl'
    scope: 'keyword.declaration.impl'
  - match: 'keyword.declaration.type'
    scope: 'keyword.declaration.type'
  - match: 'keyword.declaration'
    scope: 'keyword.declaration'
  - match: 'keyword.operator.assignment'
    scope: 'keyword.operator.assignment'
  - match: 'keyword.operator.arithmetic'
    scope: 'keyword.operator.arithmetic'
  - match: 'keyword.operator.bitwise'
    scope: 'keyword.operator.bitwise'
  - match: 'keyword.operator.logical'
    scope: 'keyword.operator.logical'
  - match: 'keyword.operator.word'
    scope: 'keyword.operator.word'
  - match: 'keyword.operator'
    scope: 'keyword.operator'
  - match: 'keyword.control.conditional'
    scope: 'keyword.control.conditional'
  - match: 'keyword.control.import'
    scope: 'keyword.control.import'
  - match: 'keyword.control'
    scope: 'keyword.control'
  - match: 'keyword.other.type'
    scope: 'keyword.other.type'
  - match: 'keyword.other'
    scope: 'keyword.other'
  - match: 'keyword'
    scope: 'keyword'
  - match: 'string.quoted.single'
    scope: 'string.quoted.single'
  - match: 'string.quoted.double'
    scope: 'string.quoted.double'
  - match: 'string.quoted.triple'
    scope: 'string.quoted.triple'
  - match: 'string.quoted.other'
    scope: 'string.quoted.other'
  - match: 'string.unquoted.heredoc'
    scope: 'string.unquoted.heredoc'
  - match: 'string.unquoted'
    scope: 'string.unquoted'
  - match: 'string.regexp'
    scope: 'string.regexp'
  - match: 'string.interpolated'
    scope: 'string.interpolated'
  - match: 'string.other'
    scope: 'string.other'
  - match: 'string'
    scope: 'string'
  - match: 'support.constant.ext'
    scope: 'support.constant.ext'
  - match: 'support.constant'
    scope: 'support.constant'
  - match: 'support.function'
    scope: 'support.function'
  - match: 'support.module'
    scope: 'support.module'
  - match: 'support.type'
    scope: 'support.type'
  - match: 'support.class'
    scope: 'support.class'
  - match: 'support.variable'
    scope: 'support.variable'
  - match: 'support.struct'
    scope: 'support.struct'
  - match: 'support.other'
    scope: 'support.other'
  - match: 'text.html.basic'
    scope: 'text.html.basic'
  - match: 'text.html.markdown'
    scope: 'text.html.markdown'
  - match: 'text.html'
    scope: 'text.html'
  - match: 'text.xml'
    scope: 'text.xml'
  - match: 'text.plain'
    scope: 'text.plain'
  - match: 'text'
    scope: 'text'
  - match: 'variable.annotation'
    scope: 'variable.annotation'
  - match: 'variable.function'
    scope: 'variable.function'
  - match: 'variable.other.member'
    scope: 'variable.other.member'
  - match: 'variable.other.readwrite'
    scope: 'variable.other.readwrite'
  - match: 'variable.other.constant'
    scope: 'variable.other.constant'
  - match: 'variable.other'
    scope: 'variable.other'
  - match: 'variable.language'
    scope: 'variable.language'
  - match: 'variable.parameter'
    scope: 'variable.parameter'
  - match: 'variable'
    scope: 'variable'
  - match: 'source.language-suffix.embedded'
    scope: 'source.language-suffix.embedded'
  - match: 'source.language-suffix'
    scope: 'source.language-suffix'
  - match: 'source'
    scope: 'source'
