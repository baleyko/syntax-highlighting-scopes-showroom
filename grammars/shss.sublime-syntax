%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: 'Syntax Highlighting Scopes Showroom'
file_extensions:
  - shss
scope: source.shss
contexts:
  main:
    - match: '^array$'
      scope: 'array'
    - match: '^bracket$'
      scope: 'bracket'
    - match: '^block\.liquid$'
      scope: 'block.liquid'
    - match: '^block$'
      scope: 'block'
    - match: '^comment\.line\.double-slash$'
      scope: 'comment.line.double-slash'
    - match: '^comment\.line\.double-dash\.haddock$'
      scope: 'comment.line.double-dash.haddock'
    - match: '^comment\.line\.double-dash$'
      scope: 'comment.line.double-dash'
    - match: '^comment\.line\.number-sign$'
      scope: 'comment.line.number-sign'
    - match: '^comment\.line\.percentage$'
      scope: 'comment.line.percentage'
    - match: '^comment\.line\.shebang$'
      scope: 'comment.line.shebang'
    - match: '^comment\.line\.type$'
      scope: 'comment.line.type'
    - match: '^comment\.line\.string$'
      scope: 'comment.line.string'
    - match: '^comment\.line\.shebang$'
      scope: 'comment.line.shebang'
    - match: '^comment\.line\.banner$'
      scope: 'comment.line.banner'
    - match: '^comment\.line\.punctuation$'
      scope: 'comment.line.punctuation'
    - match: '^comment\.line\.percentage$'
      scope: 'comment.line.percentage'
    - match: '^comment\.line\.parameter$'
      scope: 'comment.line.parameter'
    - match: '^comment\.line\.number-sign$'
      scope: 'comment.line.number-sign'
    - match: '^comment\.line\.keyword\.punctuation$'
      scope: 'comment.line.keyword.punctuation'
    - match: '^comment\.line\.keyword$'
      scope: 'comment.line.keyword'
    - match: '^comment\.line$'
      scope: 'comment.line'
    - match: '^comment\.documentation\.string$'
      scope: 'comment.documentation.string'
    - match: '^comment\.documentation\.heredoc$'
      scope: 'comment.documentation.heredoc'
    - match: '^comment\.documentation\.false$'
      scope: 'comment.documentation.false'
    - match: '^comment\.block\.doc$'
      scope: 'comment.block.doc'
    - match: '^comment\.block\.html$'
      scope: 'comment.block.html'
    - match: '^comment\.block\.haddock$'
      scope: 'comment.block.haddock'
    - match: '^comment\.block\.empty$'
      scope: 'comment.block.empty'
    - match: '^comment\.block\.documentation$'
      scope: 'comment.block.documentation'
    - match: '^comment\.block$'
      scope: 'comment.block'
    - match: '^comment\.block$'
      scope: 'comment.block'
    - match: '^comment$'
      scope: 'comment'
    - match: '^constant\.numeric\.hexfloat$'
      scope: 'constant.numeric.hexfloat'
    - match: '^constant\.numeric\.hexadecimal$'
      scope: 'constant.numeric.hexadecimal'
    - match: '^constant\.numeric\.floating-point$'
      scope: 'constant.numeric.floating-point'
    - match: '^constant\.numeric\.preprocessor$'
      scope: 'constant.numeric.preprocessor'
    - match: '^constant\.numeric\.integer\.octal$'
      scope: 'constant.numeric.integer.octal'
    - match: '^constant\.numeric\.integer\.long\.octal$'
      scope: 'constant.numeric.integer.long.octal'
    - match: '^constant\.numeric\.integer\.long\.hexadecimal$'
      scope: 'constant.numeric.integer.long.hexadecimal'
    - match: '^constant\.numeric\.integer\.long\.decimal$'
      scope: 'constant.numeric.integer.long.decimal'
    - match: '^constant\.numeric\.integer\.long\.binary$'
      scope: 'constant.numeric.integer.long.binary'
    - match: '^constant\.numeric\.integer\.long$'
      scope: 'constant.numeric.integer.long'
    - match: '^constant\.numeric\.integer\.hexadecimal$'
      scope: 'constant.numeric.integer.hexadecimal'
    - match: '^constant\.numeric\.integer\.decimal$'
      scope: 'constant.numeric.integer.decimal'
    - match: '^constant\.numeric\.integer\.binary$'
      scope: 'constant.numeric.integer.binary'
    - match: '^constant\.numeric\.integer\.base-9$'
      scope: 'constant.numeric.integer.base-9'
    - match: '^constant\.numeric\.integer\.base-7$'
      scope: 'constant.numeric.integer.base-7'
    - match: '^constant\.numeric\.integer\.base-6$'
      scope: 'constant.numeric.integer.base-6'
    - match: '^constant\.numeric\.integer\.base-5$'
      scope: 'constant.numeric.integer.base-5'
    - match: '^constant\.numeric\.integer\.base-4$'
      scope: 'constant.numeric.integer.base-4'
    - match: '^constant\.numeric\.integer\.base-36$'
      scope: 'constant.numeric.integer.base-36'
    - match: '^constant\.numeric\.integer\.base-35$'
      scope: 'constant.numeric.integer.base-35'
    - match: '^constant\.numeric\.integer\.base-34$'
      scope: 'constant.numeric.integer.base-34'
    - match: '^constant\.numeric\.integer\.base-33$'
      scope: 'constant.numeric.integer.base-33'
    - match: '^constant\.numeric\.integer\.base-32$'
      scope: 'constant.numeric.integer.base-32'
    - match: '^constant\.numeric\.integer\.base-31$'
      scope: 'constant.numeric.integer.base-31'
    - match: '^constant\.numeric\.integer\.base-30$'
      scope: 'constant.numeric.integer.base-30'
    - match: '^constant\.numeric\.integer\.base-3$'
      scope: 'constant.numeric.integer.base-3'
    - match: '^constant\.numeric\.integer\.base-29$'
      scope: 'constant.numeric.integer.base-29'
    - match: '^constant\.numeric\.integer\.base-28$'
      scope: 'constant.numeric.integer.base-28'
    - match: '^constant\.numeric\.integer\.base-27$'
      scope: 'constant.numeric.integer.base-27'
    - match: '^constant\.numeric\.integer\.base-26$'
      scope: 'constant.numeric.integer.base-26'
    - match: '^constant\.numeric\.integer\.base-25$'
      scope: 'constant.numeric.integer.base-25'
    - match: '^constant\.numeric\.integer\.base-24$'
      scope: 'constant.numeric.integer.base-24'
    - match: '^constant\.numeric\.integer\.base-23$'
      scope: 'constant.numeric.integer.base-23'
    - match: '^constant\.numeric\.integer\.base-22$'
      scope: 'constant.numeric.integer.base-22'
    - match: '^constant\.numeric\.integer\.base-21$'
      scope: 'constant.numeric.integer.base-21'
    - match: '^constant\.numeric\.integer\.base-20$'
      scope: 'constant.numeric.integer.base-20'
    - match: '^constant\.numeric\.integer\.base-19$'
      scope: 'constant.numeric.integer.base-19'
    - match: '^constant\.numeric\.integer\.base-18$'
      scope: 'constant.numeric.integer.base-18'
    - match: '^constant\.numeric\.integer\.base-17$'
      scope: 'constant.numeric.integer.base-17'
    - match: '^constant\.numeric\.integer\.base-15$'
      scope: 'constant.numeric.integer.base-15'
    - match: '^constant\.numeric\.integer\.base-14$'
      scope: 'constant.numeric.integer.base-14'
    - match: '^constant\.numeric\.integer\.base-13$'
      scope: 'constant.numeric.integer.base-13'
    - match: '^constant\.numeric\.integer\.base-12$'
      scope: 'constant.numeric.integer.base-12'
    - match: '^constant\.numeric\.integer\.base-11$'
      scope: 'constant.numeric.integer.base-11'
    - match: '^constant\.numeric\.integer\.other$'
      scope: 'constant.numeric.integer.other'
    - match: '^constant\.numeric\.other\.density$'
      scope: 'constant.numeric.other.density'
    - match: '^constant\.numeric\.other$'
      scope: 'constant.numeric.other'
    - match: '^constant\.numeric\.integer$'
      scope: 'constant.numeric.integer'
    - match: '^constant\.numeric\.exponential$'
      scope: 'constant.numeric.exponential'
    - match: '^constant\.numeric\.float\.binary$'
      scope: 'constant.numeric.float.binary'
    - match: '^constant\.numeric\.float\.octal$'
      scope: 'constant.numeric.float.octal'
    - match: '^constant\.numeric\.float\.decimal$'
      scope: 'constant.numeric.float.decimal'
    - match: '^constant\.numeric\.float\.hexadecimal$'
      scope: 'constant.numeric.float.hexadecimal'
    - match: '^constant\.numeric\.float\.other$'
      scope: 'constant.numeric.float.other'
    - match: '^constant\.numeric\.float$'
      scope: 'constant.numeric.float'
    - match: '^constant\.numeric\.complex\.real$'
      scope: 'constant.numeric.complex.real'
    - match: '^constant\.numeric\.complex\.imaginary$'
      scope: 'constant.numeric.complex.imaginary'
    - match: '^constant\.numeric\.complex$'
      scope: 'constant.numeric.complex'
    - match: '^constant\.numeric\.index$'
      scope: 'constant.numeric.index'
    - match: '^constant\.numeric\.decimal\.with-thousand-separators$'
      scope: 'constant.numeric.decimal.with-thousand-separators'
    - match: '^constant\.numeric\.decimal$'
      scope: 'constant.numeric.decimal'
    - match: '^constant\.numeric\.hex$'
      scope: 'constant.numeric.hex'
    - match: '^constant\.numeric\.binary$'
      scope: 'constant.numeric.binary'
    - match: '^constant\.numeric\.octal$'
      scope: 'constant.numeric.octal'
    - match: '^constant\.numeric$'
      scope: 'constant.numeric'
    - match: '^constant\.language\.pragma\.module$'
      scope: 'constant.language.pragma.module'
    - match: '^constant\.language\.pragma$'
      scope: 'constant.language.pragma'
    - match: '^constant\.language\.boolean$'
      scope: 'constant.language.boolean'
    - match: '^constant\.language\.unit\.promoted$'
      scope: 'constant.language.unit.promoted'
    - match: '^constant\.language\.unit$'
      scope: 'constant.language.unit'
    - match: '^constant\.language\.nil$'
      scope: 'constant.language.nil'
    - match: '^constant\.language\.empty-list\.promoted$'
      scope: 'constant.language.empty-list.promoted'
    - match: '^constant\.language\.empty-list$'
      scope: 'constant.language.empty-list'
    - match: '^constant\.language\.boolean$'
      scope: 'constant.language.boolean'
    - match: '^constant\.language$'
      scope: 'constant.language'
    - match: '^constant\.character\.entity\.html$'
      scope: 'constant.character.entity.html'
    - match: '^constant\.character\.escape\.vertical-tab$'
      scope: 'constant.character.escape.vertical-tab'
    - match: '^constant\.character\.escape\.unicode\.name$'
      scope: 'constant.character.escape.unicode.name'
    - match: '^constant\.character\.escape\.unicode\.32-bit-hex$'
      scope: 'constant.character.escape.unicode.32-bit-hex'
    - match: '^constant\.character\.escape\.unicode\.16-bit-hex$'
      scope: 'constant.character.escape.unicode.16-bit-hex'
    - match: '^constant\.character\.escape\.unicode$'
      scope: 'constant.character.escape.unicode'
    - match: '^constant\.character\.escape\.tab$'
      scope: 'constant.character.escape.tab'
    - match: '^constant\.character\.escape\.single-quote$'
      scope: 'constant.character.escape.single-quote'
    - match: '^constant\.character\.escape\.return$'
      scope: 'constant.character.escape.return'
    - match: '^constant\.character\.escape\.octal$'
      scope: 'constant.character.escape.octal'
    - match: '^constant\.character\.escape\.newline$'
      scope: 'constant.character.escape.newline'
    - match: '^constant\.character\.escape\.linefeed$'
      scope: 'constant.character.escape.linefeed'
    - match: '^constant\.character\.escape\.line-continuation$'
      scope: 'constant.character.escape.line-continuation'
    - match: '^constant\.character\.escape\.hexadecimal$'
      scope: 'constant.character.escape.hexadecimal'
    - match: '^constant\.character\.escape\.formfeed$'
      scope: 'constant.character.escape.formfeed'
    - match: '^constant\.character\.escape\.double-quote$'
      scope: 'constant.character.escape.double-quote'
    - match: '^constant\.character\.escape\.curly-bracket$'
      scope: 'constant.character.escape.curly-bracket'
    - match: '^constant\.character\.escape\.control$'
      scope: 'constant.character.escape.control'
    - match: '^constant\.character\.escape\.codepoint$'
      scope: 'constant.character.escape.codepoint'
    - match: '^constant\.character\.escape\.bell$'
      scope: 'constant.character.escape.bell'
    - match: '^constant\.character\.escape\.backspace$'
      scope: 'constant.character.escape.backspace'
    - match: '^constant\.character\.escape\.backlash$'
      scope: 'constant.character.escape.backlash'
    - match: '^constant\.character\.escape\.octal$'
      scope: 'constant.character.escape.octal'
    - match: '^constant\.character\.escape\.hex$'
      scope: 'constant.character.escape.hex'
    - match: '^constant\.character\.escape\.unicode$'
      scope: 'constant.character.escape.unicode'
    - match: '^constant\.character\.escape\.regex$'
      scope: 'constant.character.escape.regex'
    - match: '^constant\.character\.escape$'
      scope: 'constant.character.escape'
    - match: '^constant\.character$'
      scope: 'constant.character'
    - match: '^constant\.other\.variable\.mac-classic$'
      scope: 'constant.other.variable.mac-classic'
    - match: '^constant\.other\.unicode-range$'
      scope: 'constant.other.unicode-range'
    - match: '^constant\.other\.symbol\.unquoted$'
      scope: 'constant.other.symbol.unquoted'
    - match: '^constant\.other\.symbol\.single-quoted$'
      scope: 'constant.other.symbol.single-quoted'
    - match: '^constant\.other\.symbol\.quoted\.single$'
      scope: 'constant.other.symbol.quoted.single'
    - match: '^constant\.other\.symbol\.quoted$'
      scope: 'constant.other.symbol.quoted'
    - match: '^constant\.other\.symbol\.interpolated$'
      scope: 'constant.other.symbol.interpolated'
    - match: '^constant\.other\.symbol\.hashkey\.parameter\.function$'
      scope: 'constant.other.symbol.hashkey.parameter.function'
    - match: '^constant\.other\.symbol\.hashkey\.parameter$'
      scope: 'constant.other.symbol.hashkey.parameter'
    - match: '^constant\.other\.symbol\.hashkey$'
      scope: 'constant.other.symbol.hashkey'
    - match: '^constant\.other\.symbol\.hashkey$'
      scope: 'constant.other.symbol.hashkey'
    - match: '^constant\.other\.symbol\.escape$'
      scope: 'constant.other.symbol.escape'
    - match: '^constant\.other\.symbol\.double-quoted$'
      scope: 'constant.other.symbol.double-quoted'
    - match: '^constant\.other\.symbol$'
      scope: 'constant.other.symbol'
    - match: '^constant\.other\.rune$'
      scope: 'constant.other.rune'
    - match: '^constant\.other\.property$'
      scope: 'constant.other.property'
    - match: '^constant\.other\.object\.property$'
      scope: 'constant.other.object.property'
    - match: '^constant\.other\.object$'
      scope: 'constant.other.object'
    - match: '^constant\.other\.inline-data\.html$'
      scope: 'constant.other.inline-data.html'
    - match: '^constant\.other\.inline-data$'
      scope: 'constant.other.inline-data'
    - match: '^constant\.other\.enum$'
      scope: 'constant.other.enum'
    - match: '^constant\.other\.color\.rgb-value\.hex$'
      scope: 'constant.other.color.rgb-value.hex'
    - match: '^constant\.other\.color\.rgb-value$'
      scope: 'constant.other.color.rgb-value'
    - match: '^constant\.other\.color$'
      scope: 'constant.other.color'
    - match: '^constant\.other\.key$'
      scope: 'constant.other.key'
    - match: '^constant\.other\.bareword$'
      scope: 'constant.other.bareword'
    - match: '^constant\.other\.class$'
      scope: 'constant.other.class'
    - match: '^constant\.other\.placeholder$'
      scope: 'constant.other.placeholder'
    - match: '^constant\.other\.version\.literal$'
      scope: 'constant.other.version.literal'
    - match: '^constant\.other\.version$'
      scope: 'constant.other.version'
    - match: '^constant\.other$'
      scope: 'constant.other'
    - match: '^constant$'
      scope: 'constant'
    - match: '^entity\.other\.namespace-prefix$'
      scope: 'entity.other.namespace-prefix'
    - match: '^entity\.other\.keyframe-offset\.percentage$'
      scope: 'entity.other.keyframe-offset.percentage'
    - match: '^entity\.other\.keyframe-offset$'
      scope: 'entity.other.keyframe-offset'
    - match: '^entity\.other\.inherited-class\.prelude$'
      scope: 'entity.other.inherited-class.prelude'
    - match: '^entity\.other\.inherited-class\.module\.third$'
      scope: 'entity.other.inherited-class.module.third'
    - match: '^entity\.other\.inherited-class\.module\.second$'
      scope: 'entity.other.inherited-class.module.second'
    - match: '^entity\.other\.inherited-class\.module\.first$'
      scope: 'entity.other.inherited-class.module.first'
    - match: '^entity\.other\.inherited-class\.module$'
      scope: 'entity.other.inherited-class.module'
    - match: '^entity\.other\.inherited-class$'
      scope: 'entity.other.inherited-class'
    - match: '^entity\.other\.attribute-name\.style\.html$'
      scope: 'entity.other.attribute-name.style.html'
    - match: '^entity\.other\.attribute-name\.pseudo-element$'
      scope: 'entity.other.attribute-name.pseudo-element'
    - match: '^entity\.other\.attribute-name\.pseudo-class$'
      scope: 'entity.other.attribute-name.pseudo-class'
    - match: '^entity\.other\.attribute-name\.pragma\.preprocessor$'
      scope: 'entity.other.attribute-name.pragma.preprocessor'
    - match: '^entity\.other\.attribute-name\.pragma$'
      scope: 'entity.other.attribute-name.pragma'
    - match: '^entity\.other\.attribute-name\.id\.html$'
      scope: 'entity.other.attribute-name.id.html'
    - match: '^entity\.other\.attribute-name\.id$'
      scope: 'entity.other.attribute-name.id'
    - match: '^entity\.other\.attribute-name\.html$'
      scope: 'entity.other.attribute-name.html'
    - match: '^entity\.other\.attribute-name\.class\.html$'
      scope: 'entity.other.attribute-name.class.html'
    - match: '^entity\.other\.attribute-name\.class$'
      scope: 'entity.other.attribute-name.class'
    - match: '^entity\.other\.attribute-name$'
      scope: 'entity.other.attribute-name'
    - match: '^entity\.other\.inherited-class$'
      scope: 'entity.other.inherited-class'
    - match: '^entity\.other$'
      scope: 'entity.other'
    - match: '^entity\.name\.package$'
      scope: 'entity.name.package'
    - match: '^entity\.name\.import$'
      scope: 'entity.name.import'
    - match: '^entity\.name\.type\.promoted$'
      scope: 'entity.name.type.promoted'
    - match: '^entity\.name\.type\.module$'
      scope: 'entity.name.type.module'
    - match: '^entity\.name\.type\.inherited$'
      scope: 'entity.name.type.inherited'
    - match: '^entity\.name\.type\.enum$'
      scope: 'entity.name.type.enum'
    - match: '^entity\.name\.type\.namespace$'
      scope: 'entity.name.type.namespace'
    - match: '^entity\.name\.type\.class\.record\.definition$'
      scope: 'entity.name.type.class.record.definition'
    - match: '^entity\.name\.type\.class\.record$'
      scope: 'entity.name.type.class.record'
    - match: '^entity\.name\.type\.class\.module\.definition$'
      scope: 'entity.name.type.class.module.definition'
    - match: '^entity\.name\.type\.class\.module$'
      scope: 'entity.name.type.class.module'
    - match: '^entity\.name\.type\.class\.behaviour\.definition$'
      scope: 'entity.name.type.class.behaviour.definition'
    - match: '^entity\.name\.type\.class\.behaviour$'
      scope: 'entity.name.type.class.behaviour'
    - match: '^entity\.name\.type\.class$'
      scope: 'entity.name.type.class'
    - match: '^entity\.name\.type\.trait$'
      scope: 'entity.name.type.trait'
    - match: '^entity\.name\.type\.interface$'
      scope: 'entity.name.type.interface'
    - match: '^entity\.name\.type\.class$'
      scope: 'entity.name.type.class'
    - match: '^entity\.name\.type\.struct$'
      scope: 'entity.name.type.struct'
    - match: '^entity\.name\.type\.instance$'
      scope: 'entity.name.type.instance'
    - match: '^entity\.name\.type$'
      scope: 'entity.name.type'
    - match: '^entity\.name\.class\.forward-decl$'
      scope: 'entity.name.class.forward-decl'
    - match: '^entity\.name\.class$'
      scope: 'entity.name.class'
    - match: '^entity\.name\.struct$'
      scope: 'entity.name.struct'
    - match: '^entity\.name\.enum$'
      scope: 'entity.name.enum'
    - match: '^entity\.name\.union$'
      scope: 'entity.name.union'
    - match: '^entity\.name\.trait$'
      scope: 'entity.name.trait'
    - match: '^entity\.name\.interface$'
      scope: 'entity.name.interface'
    - match: '^entity\.name\.impl$'
      scope: 'entity.name.impl'
    - match: '^entity\.name\.type$'
      scope: 'entity.name.type'
    - match: '^entity\.name\.function\.scope$'
      scope: 'entity.name.function.scope'
    - match: '^entity\.name\.function\.preprocessor$'
      scope: 'entity.name.function.preprocessor'
    - match: '^entity\.name\.function\.operator$'
      scope: 'entity.name.function.operator'
    - match: '^entity\.name\.function\.namespace-prefix$'
      scope: 'entity.name.function.namespace-prefix'
    - match: '^entity\.name\.function\.macro$'
      scope: 'entity.name.function.macro'
    - match: '^entity\.name\.function\.macro\.definition$'
      scope: 'entity.name.function.macro.definition'
    - match: '^entity\.name\.function\.guard$'
      scope: 'entity.name.function.guard'
    - match: '^entity\.name\.function\.definition$'
      scope: 'entity.name.function.definition'
    - match: '^entity\.name\.function\.constructor$'
      scope: 'entity.name.function.constructor'
    - match: '^entity\.name\.function\.destructor$'
      scope: 'entity.name.function.destructor'
    - match: '^entity\.name\.function$'
      scope: 'entity.name.function'
    - match: '^entity\.name\.goto-label$'
      scope: 'entity.name.goto-label'
    - match: '^entity\.name\.function$'
      scope: 'entity.name.function'
    - match: '^entity\.name\.namespace$'
      scope: 'entity.name.namespace'
    - match: '^entity\.name\.constant$'
      scope: 'entity.name.constant'
    - match: '^entity\.name\.entity\.other\.html$'
      scope: 'entity.name.entity.other.html'
    - match: '^entity\.name\.entity\.other$'
      scope: 'entity.name.entity.other'
    - match: '^entity\.name\.entity$'
      scope: 'entity.name.entity'
    - match: '^entity\.name\.label$'
      scope: 'entity.name.label'
    - match: '^entity\.name\.section$'
      scope: 'entity.name.section'
    - match: '^entity\.name\.tag\.wildcard$'
      scope: 'entity.name.tag.wildcard'
    - match: '^entity\.name\.tag\.style\.html$'
      scope: 'entity.name.tag.style.html'
    - match: '^entity\.name\.tag\.style$'
      scope: 'entity.name.tag.style'
    - match: '^entity\.name\.tag\.script\.html$'
      scope: 'entity.name.tag.script.html'
    - match: '^entity\.name\.tag\.script$'
      scope: 'entity.name.tag.script'
    - match: '^entity\.name\.tag\.other\.html$'
      scope: 'entity.name.tag.other.html'
    - match: '^entity\.name\.tag\.other$'
      scope: 'entity.name.tag.other'
    - match: '^entity\.name\.tag\.inline$'
      scope: 'entity.name.tag.inline'
    - match: '^entity\.name\.tag\.block$'
      scope: 'entity.name.tag.block'
    - match: '^entity\.name\.tag\.custom$'
      scope: 'entity.name.tag.custom'
    - match: '^entity\.name\.tag$'
      scope: 'entity.name.tag'
    - match: '^entity\.name$'
      scope: 'entity.name'
    - match: '^entity\.alias\.import$'
      scope: 'entity.alias.import'
    - match: '^entity\.alias$'
      scope: 'entity.alias'
    - match: '^entity$'
      scope: 'entity'
    - match: '^identifier$'
      scope: 'identifier'
    - match: '^invalid\.deprecated\.package_name_not_lowercase$'
      scope: 'invalid.deprecated.package_name_not_lowercase'
    - match: '^invalid\.deprecated\.operator$'
      scope: 'invalid.deprecated.operator'
    - match: '^invalid\.deprecated\.gradient\.function$'
      scope: 'invalid.deprecated.gradient.function'
    - match: '^invalid\.deprecated\.gradient$'
      scope: 'invalid.deprecated.gradient'
    - match: '^invalid\.deprecated\.function$'
      scope: 'invalid.deprecated.function'
    - match: '^invalid\.deprecated\.constant\.media$'
      scope: 'invalid.deprecated.constant.media'
    - match: '^invalid\.deprecated\.constant$'
      scope: 'invalid.deprecated.constant'
    - match: '^invalid\.deprecated\.combinator$'
      scope: 'invalid.deprecated.combinator'
    - match: '^invalid\.deprecated\.color\.system$'
      scope: 'invalid.deprecated.color.system'
    - match: '^invalid\.deprecated\.color$'
      scope: 'invalid.deprecated.color'
    - match: '^invalid\.deprecated$'
      scope: 'invalid.deprecated'
    - match: '^invalid\.illegal\.you-forgot-semicolon$'
      scope: 'invalid.illegal.you-forgot-semicolon'
    - match: '^invalid\.illegal\.whitespace\.charset$'
      scope: 'invalid.illegal.whitespace.charset'
    - match: '^invalid\.illegal\.whitespace$'
      scope: 'invalid.illegal.whitespace'
    - match: '^invalid\.illegal\.unknown-rune$'
      scope: 'invalid.illegal.unknown-rune'
    - match: '^invalid\.illegal\.unknown-escape$'
      scope: 'invalid.illegal.unknown-escape'
    - match: '^invalid\.illegal\.unexpected-characters\.charset$'
      scope: 'invalid.illegal.unexpected-characters.charset'
    - match: '^invalid\.illegal\.unexpected-characters$'
      scope: 'invalid.illegal.unexpected-characters'
    - match: '^invalid\.illegal\.unexpected-text$'
      scope: 'invalid.illegal.unexpected-text'
    - match: '^invalid\.illegal\.unclosed\.string$'
      scope: 'invalid.illegal.unclosed.string'
    - match: '^invalid\.illegal\.unclosed-string\.charset$'
      scope: 'invalid.illegal.unclosed-string.charset'
    - match: '^invalid\.illegal\.unclosed-string$'
      scope: 'invalid.illegal.unclosed-string'
    - match: '^invalid\.illegal\.string$'
      scope: 'invalid.illegal.string'
    - match: '^invalid\.illegal\.stray-comment-end$'
      scope: 'invalid.illegal.stray-comment-end'
    - match: '^invalid\.illegal\.stray$'
      scope: 'invalid.illegal.stray'
    - match: '^invalid\.illegal\.slice$'
      scope: 'invalid.illegal.slice'
    - match: '^invalid\.illegal\.send-channel$'
      scope: 'invalid.illegal.send-channel'
    - match: '^invalid\.illegal\.receive-channel$'
      scope: 'invalid.illegal.receive-channel'
    - match: '^invalid\.illegal\.placeholder$'
      scope: 'invalid.illegal.placeholder'
    - match: '^invalid\.illegal\.numeric$'
      scope: 'invalid.illegal.numeric'
    - match: '^invalid\.illegal\.not-lowercase\.charset$'
      scope: 'invalid.illegal.not-lowercase.charset'
    - match: '^invalid\.illegal\.not-lowercase$'
      scope: 'invalid.illegal.not-lowercase'
    - match: '^invalid\.illegal\.not-double-quoted\.charset$'
      scope: 'invalid.illegal.not-double-quoted.charset'
    - match: '^invalid\.illegal\.not-double-quoted$'
      scope: 'invalid.illegal.not-double-quoted'
    - match: '^invalid\.illegal\.no-whitespace\.charset$'
      scope: 'invalid.illegal.no-whitespace.charset'
    - match: '^invalid\.illegal\.no-whitespace$'
      scope: 'invalid.illegal.no-whitespace'
    - match: '^invalid\.illegal\.name$'
      scope: 'invalid.illegal.name'
    - match: '^invalid\.illegal\.macro-name$'
      scope: 'invalid.illegal.macro-name'
    - match: '^invalid\.illegal\.leading-whitespace\.charset$'
      scope: 'invalid.illegal.leading-whitespace.charset'
    - match: '^invalid\.illegal\.leading-whitespace$'
      scope: 'invalid.illegal.leading-whitespace'
    - match: '^invalid\.illegal\.integer$'
      scope: 'invalid.illegal.integer'
    - match: '^invalid\.illegal\.incomplete\.html$'
      scope: 'invalid.illegal.incomplete.html'
    - match: '^invalid\.illegal\.incomplete$'
      scope: 'invalid.illegal.incomplete'
    - match: '^invalid\.illegal\.identifier$'
      scope: 'invalid.illegal.identifier'
    - match: '^invalid\.illegal\.delimiter-too-long$'
      scope: 'invalid.illegal.delimiter-too-long'
    - match: '^invalid\.illegal\.constant\.character\.escape$'
      scope: 'invalid.illegal.constant.character.escape'
    - match: '^invalid\.illegal\.constant\.character$'
      scope: 'invalid.illegal.constant.character'
    - match: '^invalid\.illegal\.constant$'
      scope: 'invalid.illegal.constant'
    - match: '^invalid\.illegal\.comma$'
      scope: 'invalid.illegal.comma'
    - match: '^invalid\.illegal\.closing-curly-bracket$'
      scope: 'invalid.illegal.closing-curly-bracket'
    - match: '^invalid\.illegal\.character_not_allowed_here$'
      scope: 'invalid.illegal.character_not_allowed_here'
    - match: '^invalid\.illegal\.character$'
      scope: 'invalid.illegal.character'
    - match: '^invalid\.illegal\.character-out-of-range$'
      scope: 'invalid.illegal.character-out-of-range'
    - match: '^invalid\.illegal\.character-not-allowed-here$'
      scope: 'invalid.illegal.character-not-allowed-here'
    - match: '^invalid\.illegal\.bad-identifier$'
      scope: 'invalid.illegal.bad-identifier'
    - match: '^invalid\.illegal\.bad-ampersand\.html$'
      scope: 'invalid.illegal.bad-ampersand.html'
    - match: '^invalid\.illegal\.bad-ampersand$'
      scope: 'invalid.illegal.bad-ampersand'
    - match: '^invalid\.illegal\.backslash$'
      scope: 'invalid.illegal.backslash'
    - match: '^invalid\.illegal\.atom$'
      scope: 'invalid.illegal.atom'
    - match: '^invalid\.illegal\.syntax\.pragma$'
      scope: 'invalid.illegal.syntax.pragma'
    - match: '^invalid\.illegal\.syntax$'
      scope: 'invalid.illegal.syntax'
    - match: '^invalid\.illegal\.trailing-whitespace$'
      scope: 'invalid.illegal.trailing-whitespace'
    - match: '^invalid\.illegal\.stray-bracket-end$'
      scope: 'invalid.illegal.stray-bracket-end'
    - match: '^invalid\.illegal\.stray-semi-colon$'
      scope: 'invalid.illegal.stray-semi-colon'
    - match: '^invalid\.illegal$'
      scope: 'invalid.illegal'
    - match: '^invalid$'
      scope: 'invalid'
    - match: '^keyword\.module$'
      scope: 'keyword.module'
    - match: '^keyword\.map$'
      scope: 'keyword.map'
    - match: '^keyword\.interface$'
      scope: 'keyword.interface'
    - match: '^keyword\.import$'
      scope: 'keyword.import'
    - match: '^keyword\.function$'
      scope: 'keyword.function'
    - match: '^keyword\.expressions-and-types$'
      scope: 'keyword.expressions-and-types'
    - match: '^keyword\.var$'
      scope: 'keyword.var'
    - match: '^keyword\.type$'
      scope: 'keyword.type'
    - match: '^keyword\.struct$'
      scope: 'keyword.struct'
    - match: '^keyword\.reserved$'
      scope: 'keyword.reserved'
    - match: '^keyword\.package$'
      scope: 'keyword.package'
    - match: '^keyword\.const$'
      scope: 'keyword.const'
    - match: '^keyword\.channel$'
      scope: 'keyword.channel'
    - match: '^keyword\.bracket\.begin$'
      scope: 'keyword.bracket.begin'
    - match: '^keyword\.bracket\.end$'
      scope: 'keyword.bracket.end'
    - match: '^keyword\.bracket$'
      scope: 'keyword.bracket'
    - match: '^keyword\.operator\.wildcard$'
      scope: 'keyword.operator.wildcard'
    - match: '^keyword\.operator\.update$'
      scope: 'keyword.operator.update'
    - match: '^keyword\.operator\.unpacking\.arguments$'
      scope: 'keyword.operator.unpacking.arguments'
    - match: '^keyword\.operator\.unpacking$'
      scope: 'keyword.operator.unpacking'
    - match: '^keyword\.operator\.transposed-variable$'
      scope: 'keyword.operator.transposed-variable'
    - match: '^keyword\.operator\.transposed-parens$'
      scope: 'keyword.operator.transposed-parens'
    - match: '^keyword\.operator\.transposed-matrix$'
      scope: 'keyword.operator.transposed-matrix'
    - match: '^keyword\.operator\.transposed-func$'
      scope: 'keyword.operator.transposed-func'
    - match: '^keyword\.operator\.textual$'
      scope: 'keyword.operator.textual'
    - match: '^keyword\.operator\.symbolic$'
      scope: 'keyword.operator.symbolic'
    - match: '^keyword\.operator\.sizeof$'
      scope: 'keyword.operator.sizeof'
    - match: '^keyword\.operator\.shift$'
      scope: 'keyword.operator.shift'
    - match: '^keyword\.operator\.shape$'
      scope: 'keyword.operator.shape'
    - match: '^keyword\.operator\.relation$'
      scope: 'keyword.operator.relation'
    - match: '^keyword\.operator\.record\.end$'
      scope: 'keyword.operator.record.end'
    - match: '^keyword\.operator\.record\.begin$'
      scope: 'keyword.operator.record.begin'
    - match: '^keyword\.operator\.record$'
      scope: 'keyword.operator.record'
    - match: '^keyword\.operator\.promoted$'
      scope: 'keyword.operator.promoted'
    - match: '^keyword\.operator\.pattern$'
      scope: 'keyword.operator.pattern'
    - match: '^keyword\.operator\.other$'
      scope: 'keyword.operator.other'
    - match: '^keyword\.operator\.macro$'
      scope: 'keyword.operator.macro'
    - match: '^keyword\.operator\.isa$'
      scope: 'keyword.operator.isa'
    - match: '^keyword\.operator\.interpolation$'
      scope: 'keyword.operator.interpolation'
    - match: '^keyword\.operator\.instanceof$'
      scope: 'keyword.operator.instanceof'
    - match: '^keyword\.operator\.increment-decrement$'
      scope: 'keyword.operator.increment-decrement'
    - match: '^keyword\.operator\.gradient$'
      scope: 'keyword.operator.gradient'
    - match: '^keyword\.operator\.function\.infix$'
      scope: 'keyword.operator.function.infix'
    - match: '^keyword\.operator\.function$'
      scope: 'keyword.operator.function'
    - match: '^keyword\.operator\.function-annotation$'
      scope: 'keyword.operator.function-annotation'
    - match: '^keyword\.operator\.dots$'
      scope: 'keyword.operator.dots'
    - match: '^keyword\.operator\.combinator$'
      scope: 'keyword.operator.combinator'
    - match: '^keyword\.operator\.channel$'
      scope: 'keyword.operator.channel'
    - match: '^keyword\.operator\.cast$'
      scope: 'keyword.operator.cast'
    - match: '^keyword\.operator\.boolean$'
      scope: 'keyword.operator.boolean'
    - match: '^keyword\.operator\.assert\.expression-separator$'
      scope: 'keyword.operator.assert.expression-separator'
    - match: '^keyword\.operator\.assert$'
      scope: 'keyword.operator.assert'
    - match: '^keyword\.operator\.arrow$'
      scope: 'keyword.operator.arrow'
    - match: '^keyword\.operator\.address$'
      scope: 'keyword.operator.address'
    - match: '^keyword\.declaration\.function$'
      scope: 'keyword.declaration.function'
    - match: '^keyword\.declaration\.class$'
      scope: 'keyword.declaration.class'
    - match: '^keyword\.declaration\.struct$'
      scope: 'keyword.declaration.struct'
    - match: '^keyword\.declaration\.enum$'
      scope: 'keyword.declaration.enum'
    - match: '^keyword\.declaration\.union$'
      scope: 'keyword.declaration.union'
    - match: '^keyword\.declaration\.trait$'
      scope: 'keyword.declaration.trait'
    - match: '^keyword\.declaration\.interface$'
      scope: 'keyword.declaration.interface'
    - match: '^keyword\.declaration\.impl$'
      scope: 'keyword.declaration.impl'
    - match: '^keyword\.declaration\.type$'
      scope: 'keyword.declaration.type'
    - match: '^keyword\.declaration$'
      scope: 'keyword.declaration'
    - match: '^keyword\.operator\.ellipsis\.placeholder$'
      scope: 'keyword.operator.ellipsis.placeholder'
    - match: '^keyword\.operator\.ellipsis$'
      scope: 'keyword.operator.ellipsis'
    - match: '^keyword\.operator\.readline$'
      scope: 'keyword.operator.readline'
    - match: '^keyword\.operator\.filetest$'
      scope: 'keyword.operator.filetest'
    - match: '^keyword\.operator\.comparison\.stringwise$'
      scope: 'keyword.operator.comparison.stringwise'
    - match: '^keyword\.operator\.comparison$'
      scope: 'keyword.operator.comparison'
    - match: '^keyword\.operator\.pragma\.flag$'
      scope: 'keyword.operator.pragma.flag'
    - match: '^keyword\.operator\.pragma$'
      scope: 'keyword.operator.pragma'
    - match: '^keyword\.operator\.repetition$'
      scope: 'keyword.operator.repetition'
    - match: '^keyword\.operator\.concatenation$'
      scope: 'keyword.operator.concatenation'
    - match: '^keyword\.operator\.range$'
      scope: 'keyword.operator.range'
    - match: '^keyword\.operator\.assignement\.compound\.bitwise$'
      scope: 'keyword.operator.assignement.compound.bitwise'
    - match: '^keyword\.operator\.assignement\.compound\.stringwise$'
      scope: 'keyword.operator.assignement.compound.stringwise'
    - match: '^keyword\.operator\.assignement\.compound$'
      scope: 'keyword.operator.assignement.compound'
    - match: '^keyword\.operator\.assignement\.conditional$'
      scope: 'keyword.operator.assignement.conditional'
    - match: '^keyword\.operator\.assignement$'
      scope: 'keyword.operator.assignement'
    - match: '^keyword\.operator\.bitwise\.shift$'
      scope: 'keyword.operator.bitwise.shift'
    - match: '^keyword\.operator\.bitwise$'
      scope: 'keyword.operator.bitwise'
    - match: '^keyword\.operator\.decrement$'
      scope: 'keyword.operator.decrement'
    - match: '^keyword\.operator\.increment$'
      scope: 'keyword.operator.increment'
    - match: '^keyword\.operator\.logical\.c-style$'
      scope: 'keyword.operator.logical.c-style'
    - match: '^keyword\.operator\.logical\.defined-or$'
      scope: 'keyword.operator.logical.defined-or'
    - match: '^keyword\.operator\.logical\.feature$'
      scope: 'keyword.operator.logical.feature'
    - match: '^keyword\.operator\.logical\.and\.media$'
      scope: 'keyword.operator.logical.and.media'
    - match: '^keyword\.operator\.logical\.and$'
      scope: 'keyword.operator.logical.and'
    - match: '^keyword\.operator\.logical$'
      scope: 'keyword.operator.logical'
    - match: '^keyword\.operator\.stringwise$'
      scope: 'keyword.operator.stringwise'
    - match: '^keyword\.operator\.arithmetic\.bitwise$'
      scope: 'keyword.operator.arithmetic.bitwise'
    - match: '^keyword\.operator\.arithmetic$'
      scope: 'keyword.operator.arithmetic'
    - match: '^keyword\.operator\.ternary$'
      scope: 'keyword.operator.ternary'
    - match: '^keyword\.operator\.heredoc$'
      scope: 'keyword.operator.heredoc'
    - match: '^keyword\.operator\.null-coalescing$'
      scope: 'keyword.operator.null-coalescing'
    - match: '^keyword\.operator\.interface$'
      scope: 'keyword.operator.interface'
    - match: '^keyword\.operator\.class$'
      scope: 'keyword.operator.class'
    - match: '^keyword\.operator\.nullable-type$'
      scope: 'keyword.operator.nullable-type'
    - match: '^keyword\.operator\.assignment\.compound\.bitwise$'
      scope: 'keyword.operator.assignment.compound.bitwise'
    - match: '^keyword\.operator\.assignment\.compound$'
      scope: 'keyword.operator.assignment.compound'
    - match: '^keyword\.operator\.assignment\.bitwise$'
      scope: 'keyword.operator.assignment.bitwise'
    - match: '^keyword\.operator\.assignment\.augmented$'
      scope: 'keyword.operator.assignment.augmented'
    - match: '^keyword\.operator\.assignment\.arithmetic$'
      scope: 'keyword.operator.assignment.arithmetic'
    - match: '^keyword\.operator\.assignment$'
      scope: 'keyword.operator.assignment'
    - match: '^keyword\.operator\.arithmetic$'
      scope: 'keyword.operator.arithmetic'
    - match: '^keyword\.operator\.bitwise$'
      scope: 'keyword.operator.bitwise'
    - match: '^keyword\.operator\.logical$'
      scope: 'keyword.operator.logical'
    - match: '^keyword\.operator\.word$'
      scope: 'keyword.operator.word'
    - match: '^keyword\.operator\.regexp$'
      scope: 'keyword.operator.regexp'
    - match: '^keyword\.operator$'
      scope: 'keyword.operator'
    - match: '^keyword\.controls$'
      scope: 'keyword.controls'
    - match: '^keyword\.control\.at-rule\.viewport$'
      scope: 'keyword.control.at-rule.viewport'
    - match: '^keyword\.control\.at-rule\.supports$'
      scope: 'keyword.control.at-rule.supports'
    - match: '^keyword\.control\.at-rule\.page$'
      scope: 'keyword.control.at-rule.page'
    - match: '^keyword\.control\.at-rule\.namespace$'
      scope: 'keyword.control.at-rule.namespace'
    - match: '^keyword\.control\.at-rule\.media$'
      scope: 'keyword.control.at-rule.media'
    - match: '^keyword\.control\.at-rule\.keyframes$'
      scope: 'keyword.control.at-rule.keyframes'
    - match: '^keyword\.control\.at-rule\.import$'
      scope: 'keyword.control.at-rule.import'
    - match: '^keyword\.control\.at-rule\.font-feature-values$'
      scope: 'keyword.control.at-rule.font-feature-values'
    - match: '^keyword\.control\.at-rule\.font-face$'
      scope: 'keyword.control.at-rule.font-face'
    - match: '^keyword\.control\.at-rule\.document$'
      scope: 'keyword.control.at-rule.document'
    - match: '^keyword\.control\.at-rule$'
      scope: 'keyword.control.at-rule'
    - match: '^keyword\.control\.at-rule\.counter-style$'
      scope: 'keyword.control.at-rule.counter-style'
    - match: '^keyword\.control\.at-rule\.charset$'
      scope: 'keyword.control.at-rule.charset'
    - match: '^keyword\.control\.at-rule$'
      scope: 'keyword.control.at-rule'
    - match: '^keyword\.control\.directive\.undef$'
      scope: 'keyword.control.directive.undef'
    - match: '^keyword\.control\.directive\.pragma\.pragma-mark$'
      scope: 'keyword.control.directive.pragma.pragma-mark'
    - match: '^keyword\.control\.directive\.pragma$'
      scope: 'keyword.control.directive.pragma'
    - match: '^keyword\.control\.directive\.module$'
      scope: 'keyword.control.directive.module'
    - match: '^keyword\.control\.directive\.line$'
      scope: 'keyword.control.directive.line'
    - match: '^keyword\.control\.directive\.import$'
      scope: 'keyword.control.directive.import'
    - match: '^keyword\.control\.directive\.ifndef$'
      scope: 'keyword.control.directive.ifndef'
    - match: '^keyword\.control\.directive\.ifdef$'
      scope: 'keyword.control.directive.ifdef'
    - match: '^keyword\.control\.directive\.export$'
      scope: 'keyword.control.directive.export'
    - match: '^keyword\.control\.directive\.diagnostic$'
      scope: 'keyword.control.directive.diagnostic'
    - match: '^keyword\.control\.directive\.define$'
      scope: 'keyword.control.directive.define'
    - match: '^keyword\.control\.directive\.conditional$'
      scope: 'keyword.control.directive.conditional'
    - match: '^keyword\.control\.directive\.behaviour$'
      scope: 'keyword.control.directive.behaviour'
    - match: '^keyword\.control\.directive\.pragma$'
      scope: 'keyword.control.directive.pragma'
    - match: '^keyword\.control\.directive$'
      scope: 'keyword.control.directive'
    - match: '^keyword\.control\.diagnostics$'
      scope: 'keyword.control.diagnostics'
    - match: '^keyword\.control\.regexp-option$'
      scope: 'keyword.control.regexp-option'
    - match: '^keyword\.control\.conditional$'
      scope: 'keyword.control.conditional'
    - match: '^keyword\.control\.anchor$'
      scope: 'keyword.control.anchor'
    - match: '^keyword\.control\.import\.from$'
      scope: 'keyword.control.import.from'
    - match: '^keyword\.control\.import$'
      scope: 'keyword.control.import'
    - match: '^keyword\.control\.continue$'
      scope: 'keyword.control.continue'
    - match: '^keyword\.control\.while$'
      scope: 'keyword.control.while'
    - match: '^keyword\.control\.return$'
      scope: 'keyword.control.return'
    - match: '^keyword\.control\.try$'
      scope: 'keyword.control.try'
    - match: '^keyword\.control\.throw$'
      scope: 'keyword.control.throw'
    - match: '^keyword\.control\.ternary$'
      scope: 'keyword.control.ternary'
    - match: '^keyword\.control\.statement$'
      scope: 'keyword.control.statement'
    - match: '^keyword\.control\.start-block$'
      scope: 'keyword.control.start-block'
    - match: '^keyword\.control\.repeat$'
      scope: 'keyword.control.repeat'
    - match: '^keyword\.control\.receive$'
      scope: 'keyword.control.receive'
    - match: '^keyword\.control\.query$'
      scope: 'keyword.control.query'
    - match: '^keyword\.control\.pseudo-method$'
      scope: 'keyword.control.pseudo-method'
    - match: '^keyword\.control\.new$'
      scope: 'keyword.control.new'
    - match: '^keyword\.control\.module$'
      scope: 'keyword.control.module'
    - match: '^keyword\.control\.if$'
      scope: 'keyword.control.if'
    - match: '^keyword\.control\.fun$'
      scope: 'keyword.control.fun'
    - match: '^keyword\.control\.finally$'
      scope: 'keyword.control.finally'
    - match: '^keyword\.control\.exception$'
      scope: 'keyword.control.exception'
    - match: '^keyword\.control\.def$'
      scope: 'keyword.control.def'
    - match: '^keyword\.control\.class$'
      scope: 'keyword.control.class'
    - match: '^keyword\.control\.catch$'
      scope: 'keyword.control.catch'
    - match: '^keyword\.control\.case$'
      scope: 'keyword.control.case'
    - match: '^keyword\.control\.begin$'
      scope: 'keyword.control.begin'
    - match: '^keyword\.control$'
      scope: 'keyword.control'
    - match: '^keyword\.others$'
      scope: 'keyword.others'
    - match: '^keyword\.other\.unit\.percentage$'
      scope: 'keyword.other.unit.percentage'
    - match: '^keyword\.other\.special-method$'
      scope: 'keyword.other.special-method'
    - match: '^keyword\.other\.preprocessor$'
      scope: 'keyword.other.preprocessor'
    - match: '^keyword\.other\.package$'
      scope: 'keyword.other.package'
    - match: '^keyword\.other\.important$'
      scope: 'keyword.other.important'
    - match: '^keyword\.other\.import$'
      scope: 'keyword.other.import'
    - match: '^keyword\.other\.forall$'
      scope: 'keyword.other.forall'
    - match: '^keyword\.other\.double-colon$'
      scope: 'keyword.other.double-colon'
    - match: '^keyword\.other\.documentation\.doc$'
      scope: 'keyword.other.documentation.doc'
    - match: '^keyword\.other\.documentation$'
      scope: 'keyword.other.documentation'
    - match: '^keyword\.other\.data$'
      scope: 'keyword.other.data'
    - match: '^keyword\.other\.big-arrow$'
      scope: 'keyword.other.big-arrow'
    - match: '^keyword\.other\.arrow$'
      scope: 'keyword.other.arrow'
    - match: '^keyword\.other\.namespace$'
      scope: 'keyword.other.namespace'
    - match: '^keyword\.other\.class$'
      scope: 'keyword.other.class'
    - match: '^keyword\.other\.interface$'
      scope: 'keyword.other.interface'
    - match: '^keyword\.other\.type$'
      scope: 'keyword.other.type'
    - match: '^keyword\.other$'
      scope: 'keyword.other'
    - match: '^keyword$'
      scope: 'keyword'
    - match: '^markup\.other\.escape\.newline\.end$'
      scope: 'markup.other.escape.newline.end'
    - match: '^markup\.other\.escape\.newline\.begin$'
      scope: 'markup.other.escape.newline.begin'
    - match: '^markup\.other\.escape\.newline$'
      scope: 'markup.other.escape.newline'
    - match: '^markup\.other\.escape$'
      scope: 'markup.other.escape'
    - match: '^markup\.other$'
      scope: 'markup.other'
    - match: '^markup\.heading$'
      scope: 'markup.heading'
    - match: '^markup\.list\.unnumbered$'
      scope: 'markup.list.unnumbered'
    - match: '^markup\.list\.numbered$'
      scope: 'markup.list.numbered'
    - match: '^markup\.list$'
      scope: 'markup.list'
    - match: '^markup\.bold$'
      scope: 'markup.bold'
    - match: '^markup\.italic$'
      scope: 'markup.italic'
    - match: '^markup\.inserted$'
      scope: 'markup.inserted'
    - match: '^markup\.deleted$'
      scope: 'markup.deleted'
    - match: '^markup\.underline\.link\.hyperlink$'
      scope: 'markup.underline.link.hyperlink'
    - match: '^markup\.underline\.link\.radar$'
      scope: 'markup.underline.link.radar'
    - match: '^markup\.underline\.link$'
      scope: 'markup.underline.link'
    - match: '^markup\.underline$'
      scope: 'markup.underline'
    - match: '^markup\.quote$'
      scope: 'markup.quote'
    - match: '^markup\.raw\.inline$'
      scope: 'markup.raw.inline'
    - match: '^markup\.raw\.block$'
      scope: 'markup.raw.block'
    - match: '^markup\.raw$'
      scope: 'markup.raw'
    - match: '^markup\.other$'
      scope: 'markup.other'
    - match: '^markup$'
      scope: 'markup'
    - match: '^meta\.at-rule\.viewport$'
      scope: 'meta.at-rule.viewport'
    - match: '^meta\.at-rule\.supports\.header$'
      scope: 'meta.at-rule.supports.header'
    - match: '^meta\.at-rule\.supports\.body$'
      scope: 'meta.at-rule.supports.body'
    - match: '^meta\.at-rule\.supports$'
      scope: 'meta.at-rule.supports'
    - match: '^meta\.at-rule\.page$'
      scope: 'meta.at-rule.page'
    - match: '^meta\.at-rule\.namespace$'
      scope: 'meta.at-rule.namespace'
    - match: '^meta\.at-rule\.media\.header$'
      scope: 'meta.at-rule.media.header'
    - match: '^meta\.at-rule\.media\.body$'
      scope: 'meta.at-rule.media.body'
    - match: '^meta\.at-rule\.media$'
      scope: 'meta.at-rule.media'
    - match: '^meta\.at-rule\.keyframes\.header$'
      scope: 'meta.at-rule.keyframes.header'
    - match: '^meta\.at-rule\.keyframes\.body$'
      scope: 'meta.at-rule.keyframes.body'
    - match: '^meta\.at-rule\.import$'
      scope: 'meta.at-rule.import'
    - match: '^meta\.at-rule\.header$'
      scope: 'meta.at-rule.header'
    - match: '^meta\.at-rule\.font-features$'
      scope: 'meta.at-rule.font-features'
    - match: '^meta\.at-rule\.font-face$'
      scope: 'meta.at-rule.font-face'
    - match: '^meta\.at-rule\.document\.header$'
      scope: 'meta.at-rule.document.header'
    - match: '^meta\.at-rule\.document\.body$'
      scope: 'meta.at-rule.document.body'
    - match: '^meta\.at-rule\.document$'
      scope: 'meta.at-rule.document'
    - match: '^meta\.at-rule\.counter-style\.header$'
      scope: 'meta.at-rule.counter-style.header'
    - match: '^meta\.at-rule\.counter-style\.body$'
      scope: 'meta.at-rule.counter-style.body'
    - match: '^meta\.at-rule\.counter-style$'
      scope: 'meta.at-rule.counter-style'
    - match: '^meta\.at-rule\.charset$'
      scope: 'meta.at-rule.charset'
    - match: '^meta\.at-rule\.body$'
      scope: 'meta.at-rule.body'
    - match: '^meta\.at-rule$'
      scope: 'meta.at-rule'
    - match: '^meta\.attribute-without-value\.html$'
      scope: 'meta.attribute-without-value.html'
    - match: '^meta\.attribute-with-value\.style\.html$'
      scope: 'meta.attribute-with-value.style.html'
    - match: '^meta\.attribute-with-value\.style$'
      scope: 'meta.attribute-with-value.style'
    - match: '^meta\.attribute-with-value\.id\.html$'
      scope: 'meta.attribute-with-value.id.html'
    - match: '^meta\.attribute-with-value\.id$'
      scope: 'meta.attribute-with-value.id'
    - match: '^meta\.attribute-with-value\.html$'
      scope: 'meta.attribute-with-value.html'
    - match: '^meta\.attribute-with-value\.class\.html$'
      scope: 'meta.attribute-with-value.class.html'
    - match: '^meta\.attribute-with-value\.class$'
      scope: 'meta.attribute-with-value.class'
    - match: '^meta\.attribute-with-value$'
      scope: 'meta.attribute-with-value'
    - match: '^meta\.attribute-selector$'
      scope: 'meta.attribute-selector'
    - match: '^meta\.definition\.variable\.local$'
      scope: 'meta.definition.variable.local'
    - match: '^meta\.definition\.variable$'
      scope: 'meta.definition.variable'
    - match: '^meta\.definition\.class\.inherited\.classes$'
      scope: 'meta.definition.class.inherited.classes'
    - match: '^meta\.definition\.class\.inherited$'
      scope: 'meta.definition.class.inherited'
    - match: '^meta\.definition\.class\.implemented\.interfaces$'
      scope: 'meta.definition.class.implemented.interfaces'
    - match: '^meta\.definition\.class\.implemented$'
      scope: 'meta.definition.class.implemented'
    - match: '^meta\.definition\.class$'
      scope: 'meta.definition.class'
    - match: '^meta\.definition$'
      scope: 'meta.definition'
    - match: '^meta\.declaration\.type\.data\.record\.block$'
      scope: 'meta.declaration.type.data.record.block'
    - match: '^meta\.declaration\.type\.data\.record$'
      scope: 'meta.declaration.type.data.record'
    - match: '^meta\.declaration\.type\.data$'
      scope: 'meta.declaration.type.data'
    - match: '^meta\.declaration\.type\.type$'
      scope: 'meta.declaration.type.type'
    - match: '^meta\.declaration\.type$'
      scope: 'meta.declaration.type'
    - match: '^meta\.declaration\.module$'
      scope: 'meta.declaration.module'
    - match: '^meta\.declaration\.instance\.deriving$'
      scope: 'meta.declaration.instance.deriving'
    - match: '^meta\.declaration\.instance$'
      scope: 'meta.declaration.instance'
    - match: '^meta\.declaration\.exports$'
      scope: 'meta.declaration.exports'
    - match: '^meta\.declaration\.class$'
      scope: 'meta.declaration.class'
    - match: '^meta\.declaration\.assertion$'
      scope: 'meta.declaration.assertion'
    - match: '^meta\.declaration\.annotation$'
      scope: 'meta.declaration.annotation'
    - match: '^meta\.declaration$'
      scope: 'meta.declaration'
    - match: '^meta\.ctor\.type-declaration$'
      scope: 'meta.ctor.type-declaration'
    - match: '^meta\.ctor$'
      scope: 'meta.ctor'
    - match: '^meta\.angle-brackets$'
      scope: 'meta.angle-brackets'
    - match: '^meta\.deriving\.strategy$'
      scope: 'meta.deriving.strategy'
    - match: '^meta\.deriving$'
      scope: 'meta.deriving'
    - match: '^meta\.directive\.define$'
      scope: 'meta.directive.define'
    - match: '^meta\.directive\.behaviour$'
      scope: 'meta.directive.behaviour'
    - match: '^meta\.directive\.undef$'
      scope: 'meta.directive.undef'
    - match: '^meta\.directive\.record$'
      scope: 'meta.directive.record'
    - match: '^meta\.directive\.module$'
      scope: 'meta.directive.module'
    - match: '^meta\.directive\.import$'
      scope: 'meta.directive.import'
    - match: '^meta\.directive\.ifndef$'
      scope: 'meta.directive.ifndef'
    - match: '^meta\.directive\.ifdef$'
      scope: 'meta.directive.ifdef'
    - match: '^meta\.directive\.export$'
      scope: 'meta.directive.export'
    - match: '^meta\.directive$'
      scope: 'meta.directive'
    - match: '^meta\.method-call\.static$'
      scope: 'meta.method-call.static'
    - match: '^meta\.method-call$'
      scope: 'meta.method-call'
    - match: '^meta\.toc-list$'
      scope: 'meta.toc-list'
    - match: '^meta\.class-struct-block$'
      scope: 'meta.class-struct-block'
    - match: '^meta\.class\.old-style$'
      scope: 'meta.class.old-style'
    - match: '^meta\.class\.identifier$'
      scope: 'meta.class.identifier'
    - match: '^meta\.class$'
      scope: 'meta.class'
    - match: '^meta\.struct$'
      scope: 'meta.struct'
    - match: '^meta\.enum$'
      scope: 'meta.enum'
    - match: '^meta\.union$'
      scope: 'meta.union'
    - match: '^meta\.trait$'
      scope: 'meta.trait'
    - match: '^meta\.interface$'
      scope: 'meta.interface'
    - match: '^meta\.import$'
      scope: 'meta.import'
    - match: '^meta\.impl$'
      scope: 'meta.impl'
    - match: '^meta\.type$'
      scope: 'meta.type'
    - match: '^meta\.string$'
      scope: 'meta.string'
    - match: '^meta\.path$'
      scope: 'meta.path'
    - match: '^meta\.function-call$'
      scope: 'meta.function-call'
    - match: '^meta\.block$'
      scope: 'meta.block'
    - match: '^meta\.catch$'
      scope: 'meta.catch'
    - match: '^meta\.embedded\.block$'
      scope: 'meta.embedded.block'
    - match: '^meta\.embedded\.sql$'
      scope: 'meta.embedded.sql'
    - match: '^meta\.embedded\.line$'
      scope: 'meta.embedded.line'
    - match: '^meta\.embedded\.block$'
      scope: 'meta.embedded.block'
    - match: '^meta\.embedded$'
      scope: 'meta.embedded'
    - match: '^meta\.function$'
      scope: 'meta.function'
    - match: '^meta\.braces$'
      scope: 'meta.braces'
    - match: '^meta\.group$'
      scope: 'meta.group'
    - match: '^meta\.parens$'
      scope: 'meta.parens'
    - match: '^meta\.brackets$'
      scope: 'meta.brackets'
    - match: '^meta\.generic$'
      scope: 'meta.generic'
    - match: '^meta\.via$'
      scope: 'meta.via'
    - match: '^meta\.using-namespace-declaration$'
      scope: 'meta.using-namespace-declaration'
    - match: '^meta\.type-signature$'
      scope: 'meta.type-signature'
    - match: '^meta\.try\.resources$'
      scope: 'meta.try.resources'
    - match: '^meta\.try$'
      scope: 'meta.try'
    - match: '^meta\.throwables$'
      scope: 'meta.throwables'
    - match: '^meta\.syntaxstart-block$'
      scope: 'meta.syntaxstart-block'
    - match: '^meta\.structure\.tuple$'
      scope: 'meta.structure.tuple'
    - match: '^meta\.structure\.record$'
      scope: 'meta.structure.record'
    - match: '^meta\.structure\.list$'
      scope: 'meta.structure.list'
    - match: '^meta\.structure\.list\.function$'
      scope: 'meta.structure.list.function'
    - match: '^meta\.structure\.dictionary$'
      scope: 'meta.structure.dictionary'
    - match: '^meta\.structure\.binary$'
      scope: 'meta.structure.binary'
    - match: '^meta\.selector$'
      scope: 'meta.selector'
    - match: '^meta\.section$'
      scope: 'meta.section'
    - match: '^meta\.require$'
      scope: 'meta.require'
    - match: '^meta\.record-usage$'
      scope: 'meta.record-usage'
    - match: '^meta\.record-field\.type-declaration$'
      scope: 'meta.record-field.type-declaration'
    - match: '^meta\.record-field$'
      scope: 'meta.record-field'
    - match: '^meta\.ratio$'
      scope: 'meta.ratio'
    - match: '^meta\.property-name$'
      scope: 'meta.property-name'
    - match: '^meta\.property-list\.font-feature$'
      scope: 'meta.property-list.font-feature'
    - match: '^meta\.property-list$'
      scope: 'meta.property-list'
    - match: '^meta\.preprocessor\.pragma$'
      scope: 'meta.preprocessor.pragma'
    - match: '^meta\.preprocessor\.macro$'
      scope: 'meta.preprocessor.macro'
    - match: '^meta\.preprocessor\.include$'
      scope: 'meta.preprocessor.include'
    - match: '^meta\.preprocessor\.diagnostic$'
      scope: 'meta.preprocessor.diagnostic'
    - match: '^meta\.preprocessor$'
      scope: 'meta.preprocessor'
    - match: '^meta\.package$'
      scope: 'meta.package'
    - match: '^meta\.other\.constructor-list$'
      scope: 'meta.other.constructor-list'
    - match: '^meta\.other$'
      scope: 'meta.other'
    - match: '^meta\.namespace-block$'
      scope: 'meta.namespace-block'
    - match: '^meta\.multiline\.type-declaration$'
      scope: 'meta.multiline.type-declaration'
    - match: '^meta\.multiline$'
      scope: 'meta.multiline'
    - match: '^meta\.module$'
      scope: 'meta.module'
    - match: '^meta\.method\.return-type$'
      scope: 'meta.method.return-type'
    - match: '^meta\.method\.identifier$'
      scope: 'meta.method.identifier'
    - match: '^meta\.method$'
      scope: 'meta.method'
    - match: '^meta\.method-call$'
      scope: 'meta.method-call'
    - match: '^meta\.macro-usage$'
      scope: 'meta.macro-usage'
    - match: '^meta\.item-access$'
      scope: 'meta.item-access'
    - match: '^meta\.interpolation$'
      scope: 'meta.interpolation'
    - match: '^meta\.inner-class$'
      scope: 'meta.inner-class'
    - match: '^meta\.initialization$'
      scope: 'meta.initialization'
    - match: '^meta\.foreign$'
      scope: 'meta.foreign'
    - match: '^meta\.finally$'
      scope: 'meta.finally'
    - match: '^meta\.feature-query$'
      scope: 'meta.feature-query'
    - match: '^meta\.extern-block$'
      scope: 'meta.extern-block'
    - match: '^meta\.expression\.try$'
      scope: 'meta.expression.try'
    - match: '^meta\.expression\.receive$'
      scope: 'meta.expression.receive'
    - match: '^meta\.expression\.query$'
      scope: 'meta.expression.query'
    - match: '^meta\.expression\.parenthesized$'
      scope: 'meta.expression.parenthesized'
    - match: '^meta\.expression\.if$'
      scope: 'meta.expression.if'
    - match: '^meta\.expression\.fun$'
      scope: 'meta.expression.fun'
    - match: '^meta\.expression\.case$'
      scope: 'meta.expression.case'
    - match: '^meta\.expression\.begin$'
      scope: 'meta.expression.begin'
    - match: '^meta\.expression$'
      scope: 'meta.expression'
    - match: '^meta\.environment-variable$'
      scope: 'meta.environment-variable'
    - match: '^meta\.enum$'
      scope: 'meta.enum'
    - match: '^meta\.encoding$'
      scope: 'meta.encoding'
    - match: '^meta\.empty-tuple$'
      scope: 'meta.empty-tuple'
    - match: '^meta\.empty-string\.double$'
      scope: 'meta.empty-string.double'
    - match: '^meta\.empty-string$'
      scope: 'meta.empty-string'
    - match: '^meta\.empty-list$'
      scope: 'meta.empty-list'
    - match: '^meta\.empty-dictionary$'
      scope: 'meta.empty-dictionary'
    - match: '^meta\.tag\.style\.html$'
      scope: 'meta.tag.style.html'
    - match: '^meta\.tag\.style$'
      scope: 'meta.tag.style'
    - match: '^meta\.tag\.structure$'
      scope: 'meta.tag.structure'
    - match: '^meta\.tag\.sgml\.html$'
      scope: 'meta.tag.sgml.html'
    - match: '^meta\.tag\.sgml\.doctype\.html$'
      scope: 'meta.tag.sgml.doctype.html'
    - match: '^meta\.tag\.sgml\.doctype$'
      scope: 'meta.tag.sgml.doctype'
    - match: '^meta\.tag\.sgml$'
      scope: 'meta.tag.sgml'
    - match: '^meta\.tag\.script\.html$'
      scope: 'meta.tag.script.html'
    - match: '^meta\.tag\.script$'
      scope: 'meta.tag.script'
    - match: '^meta\.tag\.preprocessor\.xml\.html$'
      scope: 'meta.tag.preprocessor.xml.html'
    - match: '^meta\.tag\.preprocessor\.xml$'
      scope: 'meta.tag.preprocessor.xml'
    - match: '^meta\.tag\.preprocessor$'
      scope: 'meta.tag.preprocessor'
    - match: '^meta\.tag\.other\.html$'
      scope: 'meta.tag.other.html'
    - match: '^meta\.tag\.other$'
      scope: 'meta.tag.other'
    - match: '^meta\.tag\.inline$'
      scope: 'meta.tag.inline'
    - match: '^meta\.tag\.block$'
      scope: 'meta.tag.block'
    - match: '^meta\.tag$'
      scope: 'meta.tag'
    - match: '^meta\.leading-tabs$'
      scope: 'meta.leading-tabs'
    - match: '^meta\.odd-tab$'
      scope: 'meta.odd-tab'
    - match: '^meta\.even-tab$'
      scope: 'meta.even-tab'
    - match: '^meta\.paragraph$'
      scope: 'meta.paragraph'
    - match: '^meta\.diagnostics\.pragma$'
      scope: 'meta.diagnostics.pragma'
    - match: '^meta\.function\.variable$'
      scope: 'meta.function.variable'
    - match: '^meta\.function\.url$'
      scope: 'meta.function.url'
    - match: '^meta\.function\.type-declaration$'
      scope: 'meta.function.type-declaration'
    - match: '^meta\.function\.timing-function$'
      scope: 'meta.function.timing-function'
    - match: '^meta\.function\.shape$'
      scope: 'meta.function.shape'
    - match: '^meta\.function\.misc$'
      scope: 'meta.function.misc'
    - match: '^meta\.function\.method\.without-arguments$'
      scope: 'meta.function.method.without-arguments'
    - match: '^meta\.function\.method\.with-arguments$'
      scope: 'meta.function.method.with-arguments'
    - match: '^meta\.function\.method$'
      scope: 'meta.function.method'
    - match: '^meta\.function\.inline$'
      scope: 'meta.function.inline'
    - match: '^meta\.function\.gradient\.invalid\.deprecated\.gradient$'
      scope: 'meta.function.gradient.invalid.deprecated.gradient'
    - match: '^meta\.function\.gradient\.invalid\.deprecated$'
      scope: 'meta.function.gradient.invalid.deprecated'
    - match: '^meta\.function\.gradient\.invalid$'
      scope: 'meta.function.gradient.invalid'
    - match: '^meta\.function\.gradient$'
      scope: 'meta.function.gradient'
    - match: '^meta\.function\.document-rule$'
      scope: 'meta.function.document-rule'
    - match: '^meta\.function\.destructor\.prototype$'
      scope: 'meta.function.destructor.prototype'
    - match: '^meta\.function\.destructor$'
      scope: 'meta.function.destructor'
    - match: '^meta\.function\.decorator$'
      scope: 'meta.function.decorator'
    - match: '^meta\.function\.constructor\.initializer-list$'
      scope: 'meta.function.constructor.initializer-list'
    - match: '^meta\.function\.constructor$'
      scope: 'meta.function.constructor'
    - match: '^meta\.function\.color$'
      scope: 'meta.function.color'
    - match: '^meta\.function\.calc$'
      scope: 'meta.function.calc'
    - match: '^meta\.function\.parameters$'
      scope: 'meta.function.parameters'
    - match: '^meta\.function\.return-type$'
      scope: 'meta.function.return-type'
    - match: '^meta\.function\.signature$'
      scope: 'meta.function.signature'
    - match: '^meta\.function$'
      scope: 'meta.function'
    - match: '^meta\.namespace$'
      scope: 'meta.namespace'
    - match: '^meta\.preprocessor\.pragma$'
      scope: 'meta.preprocessor.pragma'
    - match: '^meta\.preprocessor\.include$'
      scope: 'meta.preprocessor.include'
    - match: '^meta\.preprocessor$'
      scope: 'meta.preprocessor'
    - match: '^meta\.interpolation$'
      scope: 'meta.interpolation'
    - match: '^meta\.annotation\.identifier$'
      scope: 'meta.annotation.identifier'
    - match: '^meta\.annotation\.parameters$'
      scope: 'meta.annotation.parameters'
    - match: '^meta\.annotation$'
      scope: 'meta.annotation'
    - match: '^meta$'
      scope: 'meta'
    - match: '^parameter\.variable\.function$'
      scope: 'parameter.variable.function'
    - match: '^parameter\.variable$'
      scope: 'parameter.variable'
    - match: '^parameter$'
      scope: 'parameter'
    - match: '^punctuation\.bracket\.square$'
      scope: 'punctuation.bracket.square'
    - match: '^punctuation\.bracket\.round$'
      scope: 'punctuation.bracket.round'
    - match: '^punctuation\.bracket\.curly$'
      scope: 'punctuation.bracket.curly'
    - match: '^punctuation\.bracket\.angle$'
      scope: 'punctuation.bracket.angle'
    - match: '^punctuation\.bracket$'
      scope: 'punctuation.bracket'
    - match: '^punctuation\.whitespace\.comment\.leading$'
      scope: 'punctuation.whitespace.comment.leading'
    - match: '^punctuation\.whitespace\.comment$'
      scope: 'punctuation.whitespace.comment'
    - match: '^punctuation\.whitespace\.support\.function\.leading$'
      scope: 'punctuation.whitespace.support.function.leading'
    - match: '^punctuation\.whitespace\.support\.function$'
      scope: 'punctuation.whitespace.support.function'
    - match: '^punctuation\.whitespace\.support$'
      scope: 'punctuation.whitespace.support'
    - match: '^punctuation\.whitespace$'
      scope: 'punctuation.whitespace'
    - match: '^punctuation\.vararg-ellipses$'
      scope: 'punctuation.vararg-ellipses'
    - match: '^punctuation\.terminator\.semicolon$'
      scope: 'punctuation.terminator.semicolon'
    - match: '^punctuation\.terminator\.statement$'
      scope: 'punctuation.terminator.statement'
    - match: '^punctuation\.terminator\.expression$'
      scope: 'punctuation.terminator.expression'
    - match: '^punctuation\.terminator\.rule$'
      scope: 'punctuation.terminator.rule'
    - match: '^punctuation\.terminator$'
      scope: 'punctuation.terminator'
    - match: '^punctuation\.delimiter\.decimal\.period$'
      scope: 'punctuation.delimiter.decimal.period'
    - match: '^punctuation\.delimiter\.decimal$'
      scope: 'punctuation.delimiter.decimal'
    - match: '^punctuation\.delimiter$'
      scope: 'punctuation.delimiter'
    - match: '^punctuation\.separator\.comma$'
      scope: 'punctuation.separator.comma'
    - match: '^punctuation\.separator\.colon$'
      scope: 'punctuation.separator.colon'
    - match: '^punctuation\.separator\.arrow$'
      scope: 'punctuation.separator.arrow'
    - match: '^punctuation\.separator\.key-value$'
      scope: 'punctuation.separator.key-value'
    - match: '^punctuation\.separator\.inheritance$'
      scope: 'punctuation.separator.inheritance'
    - match: '^punctuation\.separator\.delimiter$'
      scope: 'punctuation.separator.delimiter'
    - match: '^punctuation\.separator\.classes$'
      scope: 'punctuation.separator.classes'
    - match: '^punctuation\.separator\.continuation$'
      scope: 'punctuation.separator.continuation'
    - match: '^punctuation\.separator\.decimal\.period$'
      scope: 'punctuation.separator.decimal.period'
    - match: '^punctuation\.separator\.decimal$'
      scope: 'punctuation.separator.decimal'
    - match: '^punctuation\.separator\.variable$'
      scope: 'punctuation.separator.variable'
    - match: '^punctuation\.separator\.valuepair\.dictionary$'
      scope: 'punctuation.separator.valuepair.dictionary'
    - match: '^punctuation\.separator\.valuepair$'
      scope: 'punctuation.separator.valuepair'
    - match: '^punctuation\.separator\.value-type$'
      scope: 'punctuation.separator.value-type'
    - match: '^punctuation\.separator\.value-size$'
      scope: 'punctuation.separator.value-size'
    - match: '^punctuation\.separator\.types$'
      scope: 'punctuation.separator.types'
    - match: '^punctuation\.separator\.type-specifiers$'
      scope: 'punctuation.separator.type-specifiers'
    - match: '^punctuation\.separator\.tuple$'
      scope: 'punctuation.separator.tuple'
    - match: '^punctuation\.separator\.statement$'
      scope: 'punctuation.separator.statement'
    - match: '^punctuation\.separator\.record-field$'
      scope: 'punctuation.separator.record-field'
    - match: '^punctuation\.separator\.property\.period$'
      scope: 'punctuation.separator.property.period'
    - match: '^punctuation\.separator\.property$'
      scope: 'punctuation.separator.property'
    - match: '^punctuation\.separator\.pointer-access$'
      scope: 'punctuation.separator.pointer-access'
    - match: '^punctuation\.separator\.placeholder-parts$'
      scope: 'punctuation.separator.placeholder-parts'
    - match: '^punctuation\.separator\.pipe$'
      scope: 'punctuation.separator.pipe'
    - match: '^punctuation\.separator\.period$'
      scope: 'punctuation.separator.period'
    - match: '^punctuation\.separator\.parameters$'
      scope: 'punctuation.separator.parameters'
    - match: '^punctuation\.separator\.other$'
      scope: 'punctuation.separator.other'
    - match: '^punctuation\.separator\.object$'
      scope: 'punctuation.separator.object'
    - match: '^punctuation\.separator\.namespace\.access$'
      scope: 'punctuation.separator.namespace.access'
    - match: '^punctuation\.separator\.namespace$'
      scope: 'punctuation.separator.namespace'
    - match: '^punctuation\.separator\.module-function$'
      scope: 'punctuation.separator.module-function'
    - match: '^punctuation\.separator\.method\.period$'
      scope: 'punctuation.separator.method.period'
    - match: '^punctuation\.separator\.method$'
      scope: 'punctuation.separator.method'
    - match: '^punctuation\.separator\.list\.comma$'
      scope: 'punctuation.separator.list.comma'
    - match: '^punctuation\.separator\.list$'
      scope: 'punctuation.separator.list'
    - match: '^punctuation\.separator\.key-value$'
      scope: 'punctuation.separator.key-value'
    - match: '^punctuation\.separator\.integer-float$'
      scope: 'punctuation.separator.integer-float'
    - match: '^punctuation\.separator\.inheritance$'
      scope: 'punctuation.separator.inheritance'
    - match: '^punctuation\.separator\.guards$'
      scope: 'punctuation.separator.guards'
    - match: '^punctuation\.separator\.function-punctuation-head-body$'
      scope: 'punctuation.separator.function-punctuation-head-body'
    - match: '^punctuation\.separator\.function-arity$'
      scope: 'punctuation.separator.function-arity'
    - match: '^punctuation\.separator\.expressions$'
      scope: 'punctuation.separator.expressions'
    - match: '^punctuation\.separator\.dot-access$'
      scope: 'punctuation.separator.dot-access'
    - match: '^punctuation\.separator\.dictionary$'
      scope: 'punctuation.separator.dictionary'
    - match: '^punctuation\.separator\.delimiter$'
      scope: 'punctuation.separator.delimiter'
    - match: '^punctuation\.separator\.define$'
      scope: 'punctuation.separator.define'
    - match: '^punctuation\.separator\.dash\.unicode-range$'
      scope: 'punctuation.separator.dash.unicode-range'
    - match: '^punctuation\.separator\.dash$'
      scope: 'punctuation.separator.dash'
    - match: '^punctuation\.separator\.continuation\.line$'
      scope: 'punctuation.separator.continuation.line'
    - match: '^punctuation\.separator\.continuation$'
      scope: 'punctuation.separator.continuation'
    - match: '^punctuation\.separator\.comma$'
      scope: 'punctuation.separator.comma'
    - match: '^punctuation\.separator\.clauses$'
      scope: 'punctuation.separator.clauses'
    - match: '^punctuation\.separator\.clause-head-body$'
      scope: 'punctuation.separator.clause-head-body'
    - match: '^punctuation\.separator\.class\.record$'
      scope: 'punctuation.separator.class.record'
    - match: '^punctuation\.separator\.class$'
      scope: 'punctuation.separator.class'
    - match: '^punctuation\.separator\.binary$'
      scope: 'punctuation.separator.binary'
    - match: '^punctuation\.separator\.arguments$'
      scope: 'punctuation.separator.arguments'
    - match: '^punctuation\.separator$'
      scope: 'punctuation.separator'
    - match: '^punctuation\.accessor$'
      scope: 'punctuation.accessor'
    - match: '^punctuation\.section\.try\.resources\.begin\.bracket\.round$'
      scope: 'punctuation.section.try.resources.begin.bracket.round'
    - match: '^punctuation\.section\.try\.resources\.begin\.bracket$'
      scope: 'punctuation.section.try.resources.begin.bracket'
    - match: '^punctuation\.section\.try\.resources\.begin$'
      scope: 'punctuation.section.try.resources.begin'
    - match: '^punctuation\.section\.try\.resources$'
      scope: 'punctuation.section.try.resources'
    - match: '^punctuation\.section\.try\.begin\.bracket\.curly$'
      scope: 'punctuation.section.try.begin.bracket.curly'
    - match: '^punctuation\.section\.try\.begin\.bracket$'
      scope: 'punctuation.section.try.begin.bracket'
    - match: '^punctuation\.section\.try\.begin\.$'
      scope: 'punctuation.section.try.begin.'
    - match: '^punctuation\.section\.try$'
      scope: 'punctuation.section.try'
    - match: '^punctuation\.section\.symbol\.begin$'
      scope: 'punctuation.section.symbol.begin'
    - match: '^punctuation\.section\.supports\.begin\.bracket\.curly$'
      scope: 'punctuation.section.supports.begin.bracket.curly'
    - match: '^punctuation\.section\.supports\.end\.bracket\.curly$'
      scope: 'punctuation.section.supports.end.bracket.curly'
    - match: '^punctuation\.section\.scope\.end$'
      scope: 'punctuation.section.scope.end'
    - match: '^punctuation\.section\.scope\.begin$'
      scope: 'punctuation.section.scope.begin'
    - match: '^punctuation\.section\.scope$'
      scope: 'punctuation.section.scope'
    - match: '^punctuation\.section\.regexp$'
      scope: 'punctuation.section.regexp'
    - match: '^punctuation\.section\.regexp\.begin$'
      scope: 'punctuation.section.regexp.begin'
    - match: '^punctuation\.section\.property-list\.begin\.bracket\.curly$'
      scope: 'punctuation.section.property-list.begin.bracket.curly'
    - match: '^punctuation\.section\.parens\.end\.bracket\.round$'
      scope: 'punctuation.section.parens.end.bracket.round'
    - match: '^punctuation\.section\.parens\.begin\.bracket\.round$'
      scope: 'punctuation.section.parens.begin.bracket.round'
    - match: '^punctuation\.section\.parameters\.end\.bracket\.round$'
      scope: 'punctuation.section.parameters.end.bracket.round'
    - match: '^punctuation\.section\.parameters\.begin\.bracket\.round$'
      scope: 'punctuation.section.parameters.begin.bracket.round'
    - match: '^punctuation\.section\.module\.begin\.bracket\.curly$'
      scope: 'punctuation.section.module.begin.bracket.curly'
    - match: '^punctuation\.section\.method\.begin\.bracket\.curly$'
      scope: 'punctuation.section.method.begin.bracket.curly'
    - match: '^punctuation\.section\.media\.begin\.bracket\.curly$'
      scope: 'punctuation.section.media.begin.bracket.curly'
    - match: '^punctuation\.section\.list\.begin$'
      scope: 'punctuation.section.list.begin'
    - match: '^punctuation\.section\.keyframes\.begin\.bracket\.curly$'
      scope: 'punctuation.section.keyframes.begin.bracket.curly'
    - match: '^punctuation\.section\.inner-class\.begin\.bracket\.curly$'
      scope: 'punctuation.section.inner-class.begin.bracket.curly'
    - match: '^punctuation\.section\.function$'
      scope: 'punctuation.section.function'
    - match: '^punctuation\.section\.function\.end\.bracket\.round$'
      scope: 'punctuation.section.function.end.bracket.round'
    - match: '^punctuation\.section\.function\.begin\.bracket\.round$'
      scope: 'punctuation.section.function.begin.bracket.round'
    - match: '^punctuation\.section\.finally\.begin\.bracket\.curly$'
      scope: 'punctuation.section.finally.begin.bracket.curly'
    - match: '^punctuation\.section\.expression\.begin$'
      scope: 'punctuation.section.expression.begin'
    - match: '^punctuation\.section\.enum\.begin\.bracket\.curly$'
      scope: 'punctuation.section.enum.begin.bracket.curly'
    - match: '^punctuation\.section\.document\.begin\.bracket\.curly$'
      scope: 'punctuation.section.document.begin.bracket.curly'
    - match: '^punctuation\.section\.directive\.begin$'
      scope: 'punctuation.section.directive.begin'
    - match: '^punctuation\.section\.class\.begin$'
      scope: 'punctuation.section.class.begin'
    - match: '^punctuation\.section\.class\.begin\.bracket\.curly$'
      scope: 'punctuation.section.class.begin.bracket.curly'
    - match: '^punctuation\.section\.catch\.begin\.bracket\.curly$'
      scope: 'punctuation.section.catch.begin.bracket.curly'
    - match: '^punctuation\.section\.block\.end\.bracket\.curly$'
      scope: 'punctuation.section.block.end.bracket.curly'
    - match: '^punctuation\.section\.block\.begin\.bracket\.curly$'
      scope: 'punctuation.section.block.begin.bracket.curly'
    - match: '^punctuation\.section\.begin\.bracket\.curly$'
      scope: 'punctuation.section.begin.bracket.curly'
    - match: '^punctuation\.section\.array\.end$'
      scope: 'punctuation.section.array.end'
    - match: '^punctuation\.section\.array$'
      scope: 'punctuation.section.array'
    - match: '^punctuation\.section\.array\.begin$'
      scope: 'punctuation.section.array.begin'
    - match: '^punctuation\.section\.arguments\.end\.bracket\.round$'
      scope: 'punctuation.section.arguments.end.bracket.round'
    - match: '^punctuation\.section\.arguments\.end\.bracket$'
      scope: 'punctuation.section.arguments.end.bracket'
    - match: '^punctuation\.section\.arguments\.end$'
      scope: 'punctuation.section.arguments.end'
    - match: '^punctuation\.section\.arguments\.begin\.bracket\.round$'
      scope: 'punctuation.section.arguments.begin.bracket.round'
    - match: '^punctuation\.section\.arguments\.begin\.bracket$'
      scope: 'punctuation.section.arguments.begin.bracket'
    - match: '^punctuation\.section\.arguments\.begin$'
      scope: 'punctuation.section.arguments.begin'
    - match: '^punctuation\.section\.arguments$'
      scope: 'punctuation.section.arguments'
    - match: '^punctuation\.section\.embedded\.begin$'
      scope: 'punctuation.section.embedded.begin'
    - match: '^punctuation\.section\.embedded\.end$'
      scope: 'punctuation.section.embedded.end'
    - match: '^punctuation\.section\.embedded$'
      scope: 'punctuation.section.embedded'
    - match: '^punctuation\.section\.array\.begin$'
      scope: 'punctuation.section.array.begin'
    - match: '^punctuation\.section\.array\.end$'
      scope: 'punctuation.section.array.end'
    - match: '^punctuation\.section\.array$'
      scope: 'punctuation.section.array'
    - match: '^punctuation\.section\.block\.begin$'
      scope: 'punctuation.section.block.begin'
    - match: '^punctuation\.section\.block\.end$'
      scope: 'punctuation.section.block.end'
    - match: '^punctuation\.section\.block$'
      scope: 'punctuation.section.block'
    - match: '^punctuation\.section\.braces\.begin$'
      scope: 'punctuation.section.braces.begin'
    - match: '^punctuation\.section\.braces\.end$'
      scope: 'punctuation.section.braces.end'
    - match: '^punctuation\.section\.braces$'
      scope: 'punctuation.section.braces'
    - match: '^punctuation\.section\.group\.begin$'
      scope: 'punctuation.section.group.begin'
    - match: '^punctuation\.section\.group\.end$'
      scope: 'punctuation.section.group.end'
    - match: '^punctuation\.section\.group$'
      scope: 'punctuation.section.group'
    - match: '^punctuation\.section\.parens\.begin$'
      scope: 'punctuation.section.parens.begin'
    - match: '^punctuation\.section\.parens\.end$'
      scope: 'punctuation.section.parens.end'
    - match: '^punctuation\.section\.parens$'
      scope: 'punctuation.section.parens'
    - match: '^punctuation\.section\.brackets\.begin$'
      scope: 'punctuation.section.brackets.begin'
    - match: '^punctuation\.section\.brackets\.end$'
      scope: 'punctuation.section.brackets.end'
    - match: '^punctuation\.section\.brackets$'
      scope: 'punctuation.section.brackets'
    - match: '^punctuation\.section\.interpolation\.end$'
      scope: 'punctuation.section.interpolation.end'
    - match: '^punctuation\.section\.interpolation\.begin$'
      scope: 'punctuation.section.interpolation.begin'
    - match: '^punctuation\.section\.interpolation$'
      scope: 'punctuation.section.interpolation'
    - match: '^punctuation\.section\.brace\.curly\.bracket\.begin$'
      scope: 'punctuation.section.brace.curly.bracket.begin'
    - match: '^punctuation\.section\.brace\.curly\.bracket\.end$'
      scope: 'punctuation.section.brace.curly.bracket.end'
    - match: '^punctuation\.section\.brace\.curly\.bracket$'
      scope: 'punctuation.section.brace.curly.bracket'
    - match: '^punctuation\.section\.brace\.curly$'
      scope: 'punctuation.section.brace.curly'
    - match: '^punctuation\.section\.brace$'
      scope: 'punctuation.section.brace'
    - match: '^punctuation\.section\.square\.bracket\.begin$'
      scope: 'punctuation.section.square.bracket.begin'
    - match: '^punctuation\.section\.square\.bracket\.end$'
      scope: 'punctuation.section.square.bracket.end'
    - match: '^punctuation\.section\.square\.bracket$'
      scope: 'punctuation.section.square.bracket'
    - match: '^punctuation\.section\.square$'
      scope: 'punctuation.section.square'
    - match: '^punctuation\.section\.scope\.begin$'
      scope: 'punctuation.section.scope.begin'
    - match: '^punctuation\.section\.scope\.end$'
      scope: 'punctuation.section.scope.end'
    - match: '^punctuation\.section\.scope$'
      scope: 'punctuation.section.scope'
    - match: '^punctuation\.section\.parenthesis\.round\.bracket\.begin$'
      scope: 'punctuation.section.parenthesis.round.bracket.begin'
    - match: '^punctuation\.section\.parenthesis\.round\.bracket\.end$'
      scope: 'punctuation.section.parenthesis.round.bracket.end'
    - match: '^punctuation\.section\.parenthesis\.round\.bracket$'
      scope: 'punctuation.section.parenthesis.round.bracket'
    - match: '^punctuation\.section\.parenthesis\.round$'
      scope: 'punctuation.section.parenthesis.round'
    - match: '^punctuation\.section\.parenthesis$'
      scope: 'punctuation.section.parenthesis'
    - match: '^punctuation\.section\.signature\.begin\.bracket\.curly$'
      scope: 'punctuation.section.signature.begin.bracket.curly'
    - match: '^punctuation\.section\.signature\.begin\.bracket$'
      scope: 'punctuation.section.signature.begin.bracket'
    - match: '^punctuation\.section\.signature\.begin$'
      scope: 'punctuation.section.signature.begin'
    - match: '^punctuation\.section\.signature$'
      scope: 'punctuation.section.signature'
    - match: '^punctuation\.section$'
      scope: 'punctuation.section'
    - match: '^punctuation\.other\.period$'
      scope: 'punctuation.other.period'
    - match: '^punctuation\.other\.comma$'
      scope: 'punctuation.other.comma'
    - match: '^punctuation\.other\.colon$'
      scope: 'punctuation.other.colon'
    - match: '^punctuation\.definition\.variables\.end\.bracket\.round$'
      scope: 'punctuation.definition.variables.end.bracket.round'
    - match: '^punctuation\.definition\.variables\.begin\.bracket\.round$'
      scope: 'punctuation.definition.variables.begin.bracket.round'
    - match: '^punctuation\.definition\.tuple\.begin$'
      scope: 'punctuation.definition.tuple.begin'
    - match: '^punctuation\.definition\.tag\.html$'
      scope: 'punctuation.definition.tag.html'
    - match: '^punctuation\.definition\.tag\.begin\.html$'
      scope: 'punctuation.definition.tag.begin.html'
    - match: '^punctuation\.definition\.symbol\.begin$'
      scope: 'punctuation.definition.symbol.begin'
    - match: '^punctuation\.definition\.string\.end$'
      scope: 'punctuation.definition.string.end'
    - match: '^punctuation\.definition\.string\.begin$'
      scope: 'punctuation.definition.string.begin'
    - match: '^punctuation\.definition\.string\.begin\.html$'
      scope: 'punctuation.definition.string.begin.html'
    - match: '^punctuation\.definition\.scope$'
      scope: 'punctuation.definition.scope'
    - match: '^punctuation\.definition\.quasiquotes\.end$'
      scope: 'punctuation.definition.quasiquotes.end'
    - match: '^punctuation\.definition\.quasiquotes\.begin$'
      scope: 'punctuation.definition.quasiquotes.begin'
    - match: '^punctuation\.definition\.placeholder$'
      scope: 'punctuation.definition.placeholder'
    - match: '^punctuation\.definition\.parameters\.varargs$'
      scope: 'punctuation.definition.parameters.varargs'
    - match: '^punctuation\.definition\.parameters$'
      scope: 'punctuation.definition.parameters'
    - match: '^punctuation\.definition\.parameters\.end$'
      scope: 'punctuation.definition.parameters.end'
    - match: '^punctuation\.definition\.parameters\.end\.bracket\.round$'
      scope: 'punctuation.definition.parameters.end.bracket.round'
    - match: '^punctuation\.definition\.parameters\.begin$'
      scope: 'punctuation.definition.parameters.begin'
    - match: '^punctuation\.definition\.parameters\.begin\.bracket\.round$'
      scope: 'punctuation.definition.parameters.begin.bracket.round'
    - match: '^punctuation\.definition\.list\.end$'
      scope: 'punctuation.definition.list.end'
    - match: '^punctuation\.definition\.list\.begin$'
      scope: 'punctuation.definition.list.begin'
    - match: '^punctuation\.definition\.list$'
      scope: 'punctuation.definition.list'
    - match: '^punctuation\.definition\.keyword$'
      scope: 'punctuation.definition.keyword'
    - match: '^punctuation\.definition\.interpolation\.begin\.bracket\.curly$'
      scope: 'punctuation.definition.interpolation.begin.bracket.curly'
    - match: '^punctuation\.definition\.inheritance\.end$'
      scope: 'punctuation.definition.inheritance.end'
    - match: '^punctuation\.definition\.inheritance\.begin$'
      scope: 'punctuation.definition.inheritance.begin'
    - match: '^punctuation\.definition\.imports\.end\.bracket\.round$'
      scope: 'punctuation.definition.imports.end.bracket.round'
    - match: '^punctuation\.definition\.imports\.begin\.bracket\.round$'
      scope: 'punctuation.definition.imports.begin.bracket.round'
    - match: '^punctuation\.definition\.escape$'
      scope: 'punctuation.definition.escape'
    - match: '^punctuation\.definition\.entity\.end\.html$'
      scope: 'punctuation.definition.entity.end.html'
    - match: '^punctuation\.definition\.entity\.begin\.html$'
      scope: 'punctuation.definition.entity.begin.html'
    - match: '^punctuation\.definition\.entity\.end$'
      scope: 'punctuation.definition.entity.end'
    - match: '^punctuation\.definition\.entity\.begin$'
      scope: 'punctuation.definition.entity.begin'
    - match: '^punctuation\.definition\.entity$'
      scope: 'punctuation.definition.entity'
    - match: '^punctuation\.definition\.entity\.begin\.bracket\.square$'
      scope: 'punctuation.definition.entity.begin.bracket.square'
    - match: '^punctuation\.definition\.end\.bracket\.square$'
      scope: 'punctuation.definition.end.bracket.square'
    - match: '^punctuation\.definition\.end\.bracket\.round$'
      scope: 'punctuation.definition.end.bracket.round'
    - match: '^punctuation\.definition\.end\.bracket\.curly$'
      scope: 'punctuation.definition.end.bracket.curly'
    - match: '^punctuation\.definition\.end\.bracket$'
      scope: 'punctuation.definition.end.bracket'
    - match: '^punctuation\.definition\.end$'
      scope: 'punctuation.definition.end'
    - match: '^punctuation\.definition\.dictionary\.begin$'
      scope: 'punctuation.definition.dictionary.begin'
    - match: '^punctuation\.definition\.directive$'
      scope: 'punctuation.definition.directive'
    - match: '^punctuation\.definition\.decorator$'
      scope: 'punctuation.definition.decorator'
    - match: '^punctuation\.definition\.constant\.hashkey$'
      scope: 'punctuation.definition.constant.hashkey'
    - match: '^punctuation\.definition\.constant$'
      scope: 'punctuation.definition.constant'
    - match: '^punctuation\.definition\.condition\.begin\.bracket\.round$'
      scope: 'punctuation.definition.condition.begin.bracket.round'
    - match: '^punctuation\.definition\.comment\.block\.start$'
      scope: 'punctuation.definition.comment.block.start'
    - match: '^punctuation\.definition\.comment\.block\.end$'
      scope: 'punctuation.definition.comment.block.end'
    - match: '^punctuation\.definition\.comment\.block$'
      scope: 'punctuation.definition.comment.block'
    - match: '^punctuation\.definition\.comment\.haddock$'
      scope: 'punctuation.definition.comment.haddock'
    - match: '^punctuation\.definition\.comment\.end$'
      scope: 'punctuation.definition.comment.end'
    - match: '^punctuation\.definition\.comment\.begin$'
      scope: 'punctuation.definition.comment.begin'
    - match: '^punctuation\.definition\.comment$'
      scope: 'punctuation.definition.comment'
    - match: '^punctuation\.definition\.class\.record\.end$'
      scope: 'punctuation.definition.class.record.end'
    - match: '^punctuation\.definition\.character$'
      scope: 'punctuation.definition.character'
    - match: '^punctuation\.definition\.character-class$'
      scope: 'punctuation.definition.character-class'
    - match: '^punctuation\.definition\.bracket\.square$'
      scope: 'punctuation.definition.bracket.square'
    - match: '^punctuation\.definition\.binary\.begin$'
      scope: 'punctuation.definition.binary.begin'
    - match: '^punctuation\.definition\.begin\.bracket\.square$'
      scope: 'punctuation.definition.begin.bracket.square'
    - match: '^punctuation\.definition\.begin\.bracket\.round$'
      scope: 'punctuation.definition.begin.bracket.round'
    - match: '^punctuation\.definition\.begin\.bracket\.curly$'
      scope: 'punctuation.definition.begin.bracket.curly'
    - match: '^punctuation\.definition\.begin\.bracket$'
      scope: 'punctuation.definition.begin.bracket'
    - match: '^punctuation\.definition\.begin$'
      scope: 'punctuation.definition.begin'
    - match: '^punctuation\.definition\.arguments\.begin\.bracket\.round$'
      scope: 'punctuation.definition.arguments.begin.bracket.round'
    - match: '^punctuation\.definition\.arguments\.begin\.bracket$'
      scope: 'punctuation.definition.arguments.begin.bracket'
    - match: '^punctuation\.definition\.arguments\.begin$'
      scope: 'punctuation.definition.arguments.begin'
    - match: '^punctuation\.definition\.arguments$'
      scope: 'punctuation.definition.arguments'
    - match: '^punctuation\.definition\.arbitrary-repitition$'
      scope: 'punctuation.definition.arbitrary-repitition'
    - match: '^punctuation\.definition\.annotation\.begin$'
      scope: 'punctuation.definition.annotation.begin'
    - match: '^punctuation\.definition\.annotation\.end$'
      scope: 'punctuation.definition.annotation.end'
    - match: '^punctuation\.definition\.annotation-arguments\.begin\.bracket\.round$'
      scope: 'punctuation.definition.annotation-arguments.begin.bracket.round'
    - match: '^punctuation\.definition\.annotation$'
      scope: 'punctuation.definition.annotation'
    - match: '^punctuation\.definition\.heredoc\.begin$'
      scope: 'punctuation.definition.heredoc.begin'
    - match: '^punctuation\.definition\.heredoc\.end$'
      scope: 'punctuation.definition.heredoc.end'
    - match: '^punctuation\.definition\.heredoc$'
      scope: 'punctuation.definition.heredoc'
    - match: '^punctuation\.definition\.array\.begin\.bracket\.round$'
      scope: 'punctuation.definition.array.begin.bracket.round'
    - match: '^punctuation\.definition\.array\.end\.bracket\.round$'
      scope: 'punctuation.definition.array.end.bracket.round'
    - match: '^punctuation\.definition\.constant$'
      scope: 'punctuation.definition.constant'
    - match: '^punctuation\.definition\.arbitrary-repetition$'
      scope: 'punctuation.definition.arbitrary-repetition'
    - match: '^punctuation\.definition\.tag\.begin$'
      scope: 'punctuation.definition.tag.begin'
    - match: '^punctuation\.definition\.tag\.end$'
      scope: 'punctuation.definition.tag.end'
    - match: '^punctuation\.definition\.tag$'
      scope: 'punctuation.definition.tag'
    - match: '^punctuation\.definition\.string\.begin$'
      scope: 'punctuation.definition.string.begin'
    - match: '^punctuation\.definition\.string\.end$'
      scope: 'punctuation.definition.string.end'
    - match: '^punctuation\.definition\.string$'
      scope: 'punctuation.definition.string'
    - match: '^punctuation\.definition\.keyword\.begin$'
      scope: 'punctuation.definition.keyword.begin'
    - match: '^punctuation\.definition\.keyword\.end$'
      scope: 'punctuation.definition.keyword.end'
    - match: '^punctuation\.definition\.keyword$'
      scope: 'punctuation.definition.keyword'
    - match: '^punctuation\.definition\.generic\.begin$'
      scope: 'punctuation.definition.generic.begin'
    - match: '^punctuation\.definition\.generic\.end$'
      scope: 'punctuation.definition.generic.end'
    - match: '^punctuation\.definition\.generic$'
      scope: 'punctuation.definition.generic'
    - match: '^punctuation\.definition\.variable\.begin$'
      scope: 'punctuation.definition.variable.begin'
    - match: '^punctuation\.definition\.variable\.end$'
      scope: 'punctuation.definition.variable.end'
    - match: '^punctuation\.definition\.variable$'
      scope: 'punctuation.definition.variable'
    - match: '^punctuation\.definition$'
      scope: 'punctuation.definition'
    - match: '^punctuation\.catch\.separator$'
      scope: 'punctuation.catch.separator'
    - match: '^punctuation\.unmatched\.brace\.curly\.bracket\.begin$'
      scope: 'punctuation.unmatched.brace.curly.bracket.begin'
    - match: '^punctuation\.unmatched\.brace\.curly\.bracket\.end$'
      scope: 'punctuation.unmatched.brace.curly.bracket.end'
    - match: '^punctuation\.unmatched\.brace\.curly\.bracket$'
      scope: 'punctuation.unmatched.brace.curly.bracket'
    - match: '^punctuation\.unmatched\.brace\.curly$'
      scope: 'punctuation.unmatched.brace.curly'
    - match: '^punctuation\.unmatched\.brace$'
      scope: 'punctuation.unmatched.brace'
    - match: '^punctuation\.unmatched$'
      scope: 'punctuation.unmatched'
    - match: '^punctuation$'
      scope: 'punctuation'
    - match: '^storage\.modifier\.variable$'
      scope: 'storage.modifier.variable'
    - match: '^storage\.modifier\.unit$'
      scope: 'storage.modifier.unit'
    - match: '^storage\.modifier\.signedness$'
      scope: 'storage.modifier.signedness'
    - match: '^storage\.modifier\.nonlocal$'
      scope: 'storage.modifier.nonlocal'
    - match: '^storage\.modifier\.ignore-case$'
      scope: 'storage.modifier.ignore-case'
    - match: '^storage\.modifier\.global$'
      scope: 'storage.modifier.global'
    - match: '^storage\.modifier\.endianness$'
      scope: 'storage.modifier.endianness'
    - match: '^storage\.modifier\.async$'
      scope: 'storage.modifier.async'
    - match: '^storage\.modifier\.extends$'
      scope: 'storage.modifier.extends'
    - match: '^storage\.modifier\.static$'
      scope: 'storage.modifier.static'
    - match: '^storage\.modifier\.final$'
      scope: 'storage.modifier.final'
    - match: '^storage\.modifier\.abstract$'
      scope: 'storage.modifier.abstract'
    - match: '^storage\.modifier\.public$'
      scope: 'storage.modifier.public'
    - match: '^storage\.modifier\.private$'
      scope: 'storage.modifier.private'
    - match: '^storage\.modifier\.protected$'
      scope: 'storage.modifier.protected'
    - match: '^storage\.modifier\.reference$'
      scope: 'storage.modifier.reference'
    - match: '^storage\.modifier$'
      scope: 'storage.modifier'
    - match: '^storage\.type\.variable$'
      scope: 'storage.type.variable'
    - match: '^storage\.type\.uintptr$'
      scope: 'storage.type.uintptr'
    - match: '^storage\.type\.template$'
      scope: 'storage.type.template'
    - match: '^storage\.type\.string$'
      scope: 'storage.type.string'
    - match: '^storage\.type\.rune$'
      scope: 'storage.type.rune'
    - match: '^storage\.type\.primitive$'
      scope: 'storage.type.primitive'
    - match: '^storage\.type\.primitive\.array$'
      scope: 'storage.type.primitive.array'
    - match: '^storage\.type\.object\.array$'
      scope: 'storage.type.object.array'
    - match: '^storage\.type\.numeric$'
      scope: 'storage.type.numeric'
    - match: '^storage\.type\.modifier$'
      scope: 'storage.type.modifier'
    - match: '^storage\.type\.local$'
      scope: 'storage.type.local'
    - match: '^storage\.type\.generic\.wildcard$'
      scope: 'storage.type.generic.wildcard'
    - match: '^storage\.type\.generic$'
      scope: 'storage.type.generic'
    - match: '^storage\.type\.error$'
      scope: 'storage.type.error'
    - match: '^storage\.type\.byte$'
      scope: 'storage.type.byte'
    - match: '^storage\.type\.boolean$'
      scope: 'storage.type.boolean'
    - match: '^storage\.type\.annotation$'
      scope: 'storage.type.annotation'
    - match: '^storage\.type\.signature\.method$'
      scope: 'storage.type.signature.method'
    - match: '^storage\.type\.signature$'
      scope: 'storage.type.signature'
    - match: '^storage\.type\.function\.inline$'
      scope: 'storage.type.function.inline'
    - match: '^storage\.type\.function\.arrow$'
      scope: 'storage.type.function.arrow'
    - match: '^storage\.type\.function$'
      scope: 'storage.type.function'
    - match: '^storage\.type\.class\.radar$'
      scope: 'storage.type.class.radar'
    - match: '^storage\.type\.class$'
      scope: 'storage.type.class'
    - match: '^storage\.type\.interface$'
      scope: 'storage.type.interface'
    - match: '^storage\.type\.int$'
      scope: 'storage.type.int'
    - match: '^storage\.type\.var$'
      scope: 'storage.type.var'
    - match: '^storage\.type\.struct$'
      scope: 'storage.type.struct'
    - match: '^storage\.type\.enum$'
      scope: 'storage.type.enum'
    - match: '^storage\.type\.union$'
      scope: 'storage.type.union'
    - match: '^storage\.type\.trait$'
      scope: 'storage.type.trait'
    - match: '^storage\.type\.impl$'
      scope: 'storage.type.impl'
    - match: '^storage\.type$'
      scope: 'storage.type'
    - match: '^storage$'
      scope: 'storage'
    - match: '^source\.language-suffix\.embedded$'
      scope: 'source.language-suffix.embedded'
    - match: '^source\.language-suffix$'
      scope: 'source.language-suffix'
    - match: '^source$'
      scope: 'source'
    - match: '^string\.quoted\.backtick$'
      scope: 'string.quoted.backtick'
    - match: '^string\.quoted\.symbol$'
      scope: 'string.quoted.symbol'
    - match: '^string\.quoted\.single\.single-line\.unicode$'
      scope: 'string.quoted.single.single-line.unicode'
    - match: '^string\.quoted\.single\.single-line\.unicode-raw$'
      scope: 'string.quoted.single.single-line.unicode-raw'
    - match: '^string\.quoted\.single\.single-line\.unicode-raw-regex$'
      scope: 'string.quoted.single.single-line.unicode-raw-regex'
    - match: '^string\.quoted\.single\.single-line\.sql$'
      scope: 'string.quoted.single.single-line.sql'
    - match: '^string\.quoted\.single\.single-line\.raw$'
      scope: 'string.quoted.single.single-line.raw'
    - match: '^string\.quoted\.single\.single-line\.raw-regex$'
      scope: 'string.quoted.single.single-line.raw-regex'
    - match: '^string\.quoted\.single\.single-line\.raw-format$'
      scope: 'string.quoted.single.single-line.raw-format'
    - match: '^string\.quoted\.single\.single-line\.raw-binary$'
      scope: 'string.quoted.single.single-line.raw-binary'
    - match: '^string\.quoted\.single\.single-line$'
      scope: 'string.quoted.single.single-line'
    - match: '^string\.quoted\.single\.single-line\.format$'
      scope: 'string.quoted.single.single-line.format'
    - match: '^string\.quoted\.single\.single-line\.binary$'
      scope: 'string.quoted.single.single-line.binary'
    - match: '^string\.quoted\.single$'
      scope: 'string.quoted.single'
    - match: '^string\.quoted\.single\.html$'
      scope: 'string.quoted.single.html'
    - match: '^string\.quoted\.single\.block\.unicode$'
      scope: 'string.quoted.single.block.unicode'
    - match: '^string\.quoted\.single\.block\.unicode-raw$'
      scope: 'string.quoted.single.block.unicode-raw'
    - match: '^string\.quoted\.single\.block\.unicode-raw-regex$'
      scope: 'string.quoted.single.block.unicode-raw-regex'
    - match: '^string\.quoted\.single\.block\.raw$'
      scope: 'string.quoted.single.block.raw'
    - match: '^string\.quoted\.single\.block\.raw-regex$'
      scope: 'string.quoted.single.block.raw-regex'
    - match: '^string\.quoted\.single\.block\.raw-format$'
      scope: 'string.quoted.single.block.raw-format'
    - match: '^string\.quoted\.single\.block\.raw-binary$'
      scope: 'string.quoted.single.block.raw-binary'
    - match: '^string\.quoted\.single\.block$'
      scope: 'string.quoted.single.block'
    - match: '^string\.quoted\.single\.block\.format$'
      scope: 'string.quoted.single.block.format'
    - match: '^string\.quoted\.single\.block\.binary$'
      scope: 'string.quoted.single.block.binary'
    - match: '^string\.quoted\.rune$'
      scope: 'string.quoted.rune'
    - match: '^string\.quoted\.raw$'
      scope: 'string.quoted.raw'
    - match: '^string\.quoted\.other\.multiline$'
      scope: 'string.quoted.other.multiline'
    - match: '^string\.quoted\.other\.lt-gt\.include$'
      scope: 'string.quoted.other.lt-gt.include'
    - match: '^string\.quoted\.other\.lt-gt$'
      scope: 'string.quoted.other.lt-gt'
    - match: '^string\.quoted\.other\.literal$'
      scope: 'string.quoted.other.literal'
    - match: '^string\.quoted\.other\.interpolated$'
      scope: 'string.quoted.other.interpolated'
    - match: '^string\.quoted\.double\.single-line\.unicode$'
      scope: 'string.quoted.double.single-line.unicode'
    - match: '^string\.quoted\.double\.single-line\.unicode-raw$'
      scope: 'string.quoted.double.single-line.unicode-raw'
    - match: '^string\.quoted\.double\.single-line\.unicode-raw-regex$'
      scope: 'string.quoted.double.single-line.unicode-raw-regex'
    - match: '^string\.quoted\.double\.single-line\.sql$'
      scope: 'string.quoted.double.single-line.sql'
    - match: '^string\.quoted\.double\.single-line\.raw$'
      scope: 'string.quoted.double.single-line.raw'
    - match: '^string\.quoted\.double\.single-line\.raw-regex$'
      scope: 'string.quoted.double.single-line.raw-regex'
    - match: '^string\.quoted\.double\.single-line\.raw-format$'
      scope: 'string.quoted.double.single-line.raw-format'
    - match: '^string\.quoted\.double\.single-line\.raw-binary$'
      scope: 'string.quoted.double.single-line.raw-binary'
    - match: '^string\.quoted\.double\.single-line$'
      scope: 'string.quoted.double.single-line'
    - match: '^string\.quoted\.double\.single-line\.format$'
      scope: 'string.quoted.double.single-line.format'
    - match: '^string\.quoted\.double\.single-line\.binary$'
      scope: 'string.quoted.double.single-line.binary'
    - match: '^string\.quoted\.double\.raw$'
      scope: 'string.quoted.double.raw'
    - match: '^string\.quoted\.double\.literal$'
      scope: 'string.quoted.double.literal'
    - match: '^string\.quoted\.double\.interpolated$'
      scope: 'string.quoted.double.interpolated'
    - match: '^string\.quoted\.double\.include$'
      scope: 'string.quoted.double.include'
    - match: '^string\.quoted\.double\.html$'
      scope: 'string.quoted.double.html'
    - match: '^string\.quoted\.double\.heredoc$'
      scope: 'string.quoted.double.heredoc'
    - match: '^string\.quoted\.double\.doctype\.identifiers-and-DTDs\.html$'
      scope: 'string.quoted.double.doctype.identifiers-and-DTDs.html'
    - match: '^string\.quoted\.double\.block\.unicode$'
      scope: 'string.quoted.double.block.unicode'
    - match: '^string\.quoted\.double\.block\.unicode-raw$'
      scope: 'string.quoted.double.block.unicode-raw'
    - match: '^string\.quoted\.double\.block\.unicode-raw-regex$'
      scope: 'string.quoted.double.block.unicode-raw-regex'
    - match: '^string\.quoted\.double\.block\.raw$'
      scope: 'string.quoted.double.block.raw'
    - match: '^string\.quoted\.double\.block\.raw-regex$'
      scope: 'string.quoted.double.block.raw-regex'
    - match: '^string\.quoted\.double\.block\.raw-format$'
      scope: 'string.quoted.double.block.raw-format'
    - match: '^string\.quoted\.double\.block\.raw-binary$'
      scope: 'string.quoted.double.block.raw-binary'
    - match: '^string\.quoted\.double\.block$'
      scope: 'string.quoted.double.block'
    - match: '^string\.quoted\.double\.block\.format$'
      scope: 'string.quoted.double.block.format'
    - match: '^string\.quoted\.double\.block\.binary$'
      scope: 'string.quoted.double.block.binary'
    - match: '^string\.quoted\.double$'
      scope: 'string.quoted.double'
    - match: '^string\.quoted\.custom-double$'
      scope: 'string.quoted.custom-double'
    - match: '^string\.quoted\.other\.qq-ltgt$'
      scope: 'string.quoted.other.qq-ltgt'
    - match: '^string\.quoted\.other\.qq-paren$'
      scope: 'string.quoted.other.qq-paren'
    - match: '^string\.quoted\.other\.qq-brace$'
      scope: 'string.quoted.other.qq-brace'
    - match: '^string\.quoted\.other\.qq-bracket$'
      scope: 'string.quoted.other.qq-bracket'
    - match: '^string\.quoted\.other\.q-paren$'
      scope: 'string.quoted.other.q-paren'
    - match: '^string\.quoted\.other\.q-brace$'
      scope: 'string.quoted.other.q-brace'
    - match: '^string\.quoted\.other\.q-bracket$'
      scope: 'string.quoted.other.q-bracket'
    - match: '^string\.quoted\.other\.q-ltgt$'
      scope: 'string.quoted.other.q-ltgt'
    - match: '^string\.quoted\.other$'
      scope: 'string.quoted.other'
    - match: '^string\.quoted\.single$'
      scope: 'string.quoted.single'
    - match: '^string\.quoted\.triple$'
      scope: 'string.quoted.triple'
    - match: '^string\.quoted\.other$'
      scope: 'string.quoted.other'
    - match: '^string\.quoted$'
      scope: 'string.quoted'
    - match: '^string\.unquoted\.html$'
      scope: 'string.unquoted.html'
    - match: '^string\.unquoted\.attribute-value$'
      scope: 'string.unquoted.attribute-value'
    - match: '^string\.unquoted\.heredoc\.backtick$'
      scope: 'string.unquoted.heredoc.backtick'
    - match: '^string\.unquoted\.heredoc\.quote$'
      scope: 'string.unquoted.heredoc.quote'
    - match: '^string\.unquoted\.heredoc\.doublequote$'
      scope: 'string.unquoted.heredoc.doublequote'
    - match: '^string\.unquoted\.heredoc$'
      scope: 'string.unquoted.heredoc'
    - match: '^string\.unquoted\.program-block$'
      scope: 'string.unquoted.program-block'
    - match: '^string\.unquoted\.index$'
      scope: 'string.unquoted.index'
    - match: '^string\.unquoted$'
      scope: 'string.unquoted'
    - match: '^string\.regexp\.literal$'
      scope: 'string.regexp.literal'
    - match: '^string\.regexp\.interpolated$'
      scope: 'string.regexp.interpolated'
    - match: '^string\.regexp\.group$'
      scope: 'string.regexp.group'
    - match: '^string\.regexp\.replace\.extended\.simple_delimiter$'
      scope: 'string.regexp.replace.extended.simple_delimiter'
    - match: '^string\.regexp\.format\.nested_braces$'
      scope: 'string.regexp.format.nested_braces'
    - match: '^string\.regexp\.format\.nested_parens$'
      scope: 'string.regexp.format.nested_parens'
    - match: '^string\.regexp\.format\.single_quote$'
      scope: 'string.regexp.format.single_quote'
    - match: '^string\.regexp\.format\.simple_delimiter$'
      scope: 'string.regexp.format.simple_delimiter'
    - match: '^string\.regexp\.format\.nested_ltgt$'
      scope: 'string.regexp.format.nested_ltgt'
    - match: '^string\.regexp\.format$'
      scope: 'string.regexp.format'
    - match: '^string\.regexp\.nested_ltgt$'
      scope: 'string.regexp.nested_ltgt'
    - match: '^string\.regexp\.nested_parens$'
      scope: 'string.regexp.nested_parens'
    - match: '^string\.regexp\.nested_braces$'
      scope: 'string.regexp.nested_braces'
    - match: '^string\.regexp\.find-m\.simple-delimiter$'
      scope: 'string.regexp.find-m.simple-delimiter'
    - match: '^string\.regexp\.find-m\.single-quote$'
      scope: 'string.regexp.find-m.single-quote'
    - match: '^string\.regexp\.find$'
      scope: 'string.regexp.find'
    - match: '^string\.regexp\.character-class$'
      scope: 'string.regexp.character-class'
    - match: '^string\.regexp\.arbitrary-repitition$'
      scope: 'string.regexp.arbitrary-repitition'
    - match: '^string\.regexp\.arbitrary-repetition$'
      scope: 'string.regexp.arbitrary-repetition'
    - match: '^string\.regexp\.single-quoted$'
      scope: 'string.regexp.single-quoted'
    - match: '^string\.regexp\.double-quoted$'
      scope: 'string.regexp.double-quoted'
    - match: '^string\.regexp\.replace$'
      scope: 'string.regexp.replace'
    - match: '^string\.regexp$'
      scope: 'string.regexp'
    - match: '^string\.interpolated\.qx-paren$'
      scope: 'string.interpolated.qx-paren'
    - match: '^string\.interpolated\.qx-brace$'
      scope: 'string.interpolated.qx-brace'
    - match: '^string\.interpolated\.qx-bracket$'
      scope: 'string.interpolated.qx-bracket'
    - match: '^string\.interpolated\.qx-ltgt$'
      scope: 'string.interpolated.qx-ltgt'
    - match: '^string\.interpolated\.regexp$'
      scope: 'string.interpolated.regexp'
    - match: '^string\.interpolated$'
      scope: 'string.interpolated'
    - match: '^string\.other$'
      scope: 'string.other'
    - match: '^string$'
      scope: 'string'
    - match: '^sourceembedded$'
      scope: 'sourceembedded'
    - match: '^sourceembedded\.source$'
      scope: 'sourceembedded.source'
    - match: '^sourcestyle$'
      scope: 'sourcestyle'
    - match: '^support\.constant\.vendored\.property-value$'
      scope: 'support.constant.vendored.property-value'
    - match: '^support\.constant\.vendored$'
      scope: 'support.constant.vendored'
    - match: '^support\.constant\.text-direction$'
      scope: 'support.constant.text-direction'
    - match: '^support\.constant\.step-direction$'
      scope: 'support.constant.step-direction'
    - match: '^support\.constant\.property-value\.list-style-type$'
      scope: 'support.constant.property-value.list-style-type'
    - match: '^support\.constant\.property-value$'
      scope: 'support.constant.property-value'
    - match: '^support\.constant\.parity$'
      scope: 'support.constant.parity'
    - match: '^support\.constant\.media$'
      scope: 'support.constant.media'
    - match: '^support\.constant\.mac-classic$'
      scope: 'support.constant.mac-classic'
    - match: '^support\.constant\.language-range$'
      scope: 'support.constant.language-range'
    - match: '^support\.constant\.font-name$'
      scope: 'support.constant.font-name'
    - match: '^support\.constant\.color\.w3c-standard-color-name$'
      scope: 'support.constant.color.w3c-standard-color-name'
    - match: '^support\.constant\.color\.w3c-extended-color-name$'
      scope: 'support.constant.color.w3c-extended-color-name'
    - match: '^support\.constant\.color\.current$'
      scope: 'support.constant.color.current'
    - match: '^support\.constant\.color$'
      scope: 'support.constant.color'
    - match: '^support\.constant\.ext$'
      scope: 'support.constant.ext'
    - match: '^support\.constant$'
      scope: 'support.constant'
    - match: '^support\.function\.variable\.quoted\.single\.heredoc$'
      scope: 'support.function.variable.quoted.single.heredoc'
    - match: '^support\.function\.variable\.quoted\.single$'
      scope: 'support.function.variable.quoted.single'
    - match: '^support\.function\.variable\.quoted$'
      scope: 'support.function.variable.quoted'
    - match: '^support\.function\.variable$'
      scope: 'support.function.variable'
    - match: '^support\.function\.url$'
      scope: 'support.function.url'
    - match: '^support\.function\.transform$'
      scope: 'support.function.transform'
    - match: '^support\.function\.timing-function$'
      scope: 'support.function.timing-function'
    - match: '^support\.function\.shape$'
      scope: 'support.function.shape'
    - match: '^support\.function\.prelude$'
      scope: 'support.function.prelude'
    - match: '^support\.function\.misc$'
      scope: 'support.function.misc'
    - match: '^support\.function\.macro$'
      scope: 'support.function.macro'
    - match: '^support\.function\.library$'
      scope: 'support.function.library'
    - match: '^support\.function\.kernel$'
      scope: 'support.function.kernel'
    - match: '^support\.function\.gradient$'
      scope: 'support.function.gradient'
    - match: '^support\.function\.document-rule$'
      scope: 'support.function.document-rule'
    - match: '^support\.function\.calc$'
      scope: 'support.function.calc'
    - match: '^support\.function\.builtin$'
      scope: 'support.function.builtin'
    - match: '^support\.function\.built-in\.smarty$'
      scope: 'support.function.built-in.smarty'
    - match: '^support\.function\.any-method$'
      scope: 'support.function.any-method'
    - match: '^support\.function\.C99$'
      scope: 'support.function.C99'
    - match: '^support\.function\.magic$'
      scope: 'support.function.magic'
    - match: '^support\.function$'
      scope: 'support.function'
    - match: '^support\.operator\.prelude$'
      scope: 'support.operator.prelude'
    - match: '^support\.operator$'
      scope: 'support.operator'
    - match: '^support\.module$'
      scope: 'support.module'
    - match: '^support\.tag\.prelude$'
      scope: 'support.tag.prelude'
    - match: '^support\.tag$'
      scope: 'support.tag'
    - match: '^support\.type\.vendored\.property-name\.media$'
      scope: 'support.type.vendored.property-name.media'
    - match: '^support\.type\.vendored\.property-name$'
      scope: 'support.type.vendored.property-name'
    - match: '^support\.type\.vendored$'
      scope: 'support.type.vendored'
    - match: '^support\.type\.sys-types$'
      scope: 'support.type.sys-types'
    - match: '^support\.type\.stdint$'
      scope: 'support.type.stdint'
    - match: '^support\.type\.pthread$'
      scope: 'support.type.pthread'
    - match: '^support\.type\.property-name\.media$'
      scope: 'support.type.property-name.media'
    - match: '^support\.type\.property-name$'
      scope: 'support.type.property-name'
    - match: '^support\.type\.posix-reserved$'
      scope: 'support.type.posix-reserved'
    - match: '^support\.type\.mac-classic$'
      scope: 'support.type.mac-classic'
    - match: '^support\.type\.exception$'
      scope: 'support.type.exception'
    - match: '^support\.type$'
      scope: 'support.type'
    - match: '^support\.class\.prelude$'
      scope: 'support.class.prelude'
    - match: '^support\.class$'
      scope: 'support.class'
    - match: '^support\.variable\.magic$'
      scope: 'support.variable.magic'
    - match: '^support\.variable$'
      scope: 'support.variable'
    - match: '^support\.struct$'
      scope: 'support.struct'
    - match: '^support\.other\.module$'
      scope: 'support.other.module'
    - match: '^support\.other\.namespace$'
      scope: 'support.other.namespace'
    - match: '^support\.other$'
      scope: 'support.other'
    - match: '^support$'
      scope: 'support'
    - match: '^text\.html\.embedded$'
      scope: 'text.html.embedded'
    - match: '^text\.html\.basic$'
      scope: 'text.html.basic'
    - match: '^text\.html\.markdown$'
      scope: 'text.html.markdown'
    - match: '^text\.html$'
      scope: 'text.html'
    - match: '^text\.xml$'
      scope: 'text.xml'
    - match: '^text\.plain$'
      scope: 'text.plain'
    - match: '^text\.embedded\.html$'
      scope: 'text.embedded.html'
    - match: '^text\.embedded$'
      scope: 'text.embedded'
    - match: '^text$'
      scope: 'text'
    - match: '^unused\.comment$'
      scope: 'unused.comment'
    - match: '^unused$'
      scope: 'unused'
    - match: '^variable\.annotation$'
      scope: 'variable.annotation'
    - match: '^variable\.function$'
      scope: 'variable.function'
    - match: '^variable\.other\.regexp\.last-paren-match$'
      scope: 'variable.other.regexp.last-paren-match'
    - match: '^variable\.other\.regexp\.post-match$'
      scope: 'variable.other.regexp.post-match'
    - match: '^variable\.other\.regexp\.pre-match$'
      scope: 'variable.other.regexp.pre-match'
    - match: '^variable\.other\.regexp\.match$'
      scope: 'variable.other.regexp.match'
    - match: '^variable\.other\.readwrite\.static\.mac-classic$'
      scope: 'variable.other.readwrite.static.mac-classic'
    - match: '^variable\.other\.readwrite\.static$'
      scope: 'variable.other.readwrite.static'
    - match: '^variable\.other\.readwrite\.module$'
      scope: 'variable.other.readwrite.module'
    - match: '^variable\.other\.readwrite\.member$'
      scope: 'variable.other.readwrite.member'
    - match: '^variable\.other\.readwrite\.instance$'
      scope: 'variable.other.readwrite.instance'
    - match: '^variable\.other\.readwrite\.global\.pre-defined$'
      scope: 'variable.other.readwrite.global.pre-defined'
    - match: '^variable\.other\.readwrite\.global\.mac-classic$'
      scope: 'variable.other.readwrite.global.mac-classic'
    - match: '^variable\.other\.readwrite\.global$'
      scope: 'variable.other.readwrite.global'
    - match: '^variable\.other\.readwrite\.class$'
      scope: 'variable.other.readwrite.class'
    - match: '^variable\.other\.readwrite\.list-separator$'
      scope: 'variable.other.readwrite.list-separator'
    - match: '^variable\.other\.readwrite$'
      scope: 'variable.other.readwrite'
    - match: '^variable\.other\.subpattern$'
      scope: 'variable.other.subpattern'
    - match: '^variable\.other\.predefined$'
      scope: 'variable.other.predefined'
    - match: '^variable\.other\.index$'
      scope: 'variable.other.index'
    - match: '^variable\.other\.global\.safer$'
      scope: 'variable.other.global.safer'
    - match: '^variable\.other\.global$'
      scope: 'variable.other.global'
    - match: '^variable\.other\.member$'
      scope: 'variable.other.member'
    - match: '^variable\.other\.property$'
      scope: 'variable.other.property'
    - match: '^variable\.other\.positional$'
      scope: 'variable.other.positional'
    - match: '^variable\.other\.object\.property$'
      scope: 'variable.other.object.property'
    - match: '^variable\.other\.object$'
      scope: 'variable.other.object'
    - match: '^variable\.other\.member$'
      scope: 'variable.other.member'
    - match: '^variable\.other\.generic-type$'
      scope: 'variable.other.generic-type'
    - match: '^variable\.other\.field$'
      scope: 'variable.other.field'
    - match: '^variable\.other\.definition$'
      scope: 'variable.other.definition'
    - match: '^variable\.other\.declaration$'
      scope: 'variable.other.declaration'
    - match: '^variable\.other\.constant$'
      scope: 'variable.other.constant'
    - match: '^variable\.other\.block$'
      scope: 'variable.other.block'
    - match: '^variable\.other\.assignment$'
      scope: 'variable.other.assignment'
    - match: '^variable\.other\.anonymous$'
      scope: 'variable.other.anonymous'
    - match: '^variable\.other$'
      scope: 'variable.other'
    - match: '^variable\.font-feature$'
      scope: 'variable.font-feature'
    - match: '^variable\.language\.wildcard$'
      scope: 'variable.language.wildcard'
    - match: '^variable\.language\.omitted\.field$'
      scope: 'variable.language.omitted.field'
    - match: '^variable\.language\.omitted$'
      scope: 'variable.language.omitted'
    - match: '^variable\.language\.namespace$'
      scope: 'variable.language.namespace'
    - match: '^variable\.language\.this$'
      scope: 'variable.language.this'
    - match: '^variable\.language\.super$'
      scope: 'variable.language.super'
    - match: '^variable\.language\.self$'
      scope: 'variable.language.self'
    - match: '^variable\.language$'
      scope: 'variable.language'
    - match: '^variable\.parameter\.function$'
      scope: 'variable.parameter.function'
    - match: '^variable\.parameter\.url$'
      scope: 'variable.parameter.url'
    - match: '^variable\.parameter\.style-name$'
      scope: 'variable.parameter.style-name'
    - match: '^variable\.parameter\.preprocessor$'
      scope: 'variable.parameter.preprocessor'
    - match: '^variable\.parameter\.misc$'
      scope: 'variable.parameter.misc'
    - match: '^variable\.parameter\.keyframe-list$'
      scope: 'variable.parameter.keyframe-list'
    - match: '^variable\.parameter\.document-rule$'
      scope: 'variable.parameter.document-rule'
    - match: '^variable\.parameter$'
      scope: 'variable.parameter'
    - match: '^variable\.argument$'
      scope: 'variable.argument'
    - match: '^variable$'
      scope: 'variable'
    - match: '^wildcard\.comment$'
      scope: 'wildcard.comment'
    - match: '^wildcard$'
      scope: 'wildcard'
