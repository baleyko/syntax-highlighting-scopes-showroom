#!/usr/bin/env node
const readline = require('readline');
const tests = [];
const readInterface = readline.createInterface({
  input: process.stdin,
  console: false,
});

readInterface.on('line', scope => {
  tests.push(
    `
  it('${scope}', () => {
    const { tokens } = grammar.tokenizeLine('${scope}');
    expect(tokens[0]).toEqual({
      value: '${scope}',
      scopes: ['source.syntax-scopes', '${scope}'],
    });
  });`
  );
});
readInterface.on('close', () =>
  process.stdout.write(
    `describe('Syntax Highlighting Scopes Showroom grammar', () => {
  let grammar = null;

  beforeEach(() =>
    grammar === null
      ? atom.packages
          .activatePackage('syntax-highlighting-scopes-showroom')
          .then(() => {
            grammar = atom.grammars.grammarForScopeName('source.syntax-scopes');
          })
      : Promise.resolve()
  );

  it('parses the grammar', () => {
    expect(grammar).toBeTruthy();
    expect(grammar.scopeName).toBe('source.syntax-scopes');
  });
${tests.join('\n')}
});
`
  )
);
